{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var InputBlock = function InputBlock(_ref) {\n  var setInputValue = _ref.setInputValue,\n    _ref$position = _ref.position,\n    position = _ref$position === void 0 ? \"end\" : _ref$position,\n    _ref$icon = _ref.icon,\n    icon = _ref$icon === void 0 ? null : _ref$icon,\n    _ref$placeholder = _ref.placeholder,\n    placeholder = _ref$placeholder === void 0 ? null : _ref$placeholder,\n    _ref$numeric = _ref.numeric,\n    numeric = _ref$numeric === void 0 ? false : _ref$numeric;\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    text = _useState2[0],\n    setText = _useState2[1];\n\n  var updateFields = function updateFields(e) {\n    if (numeric) {\n      var newText = checkForNumbersOnly(e);\n      setText(newText);\n      setInputValue(newText);\n    } else {\n      setText(e);\n      setInputValue(e);\n    }\n  };\n  var checkForNumbersOnly = function checkForNumbersOnly(text) {\n    var newText = \"\";\n    var numbers = \"0123456789\";\n    for (var i = 0; i < text.length; i++) {\n      if (numbers.indexOf(text[i]) > -1) {\n        newText = newText + text[i];\n      }\n    }\n    return newText.substring(0, 10);\n  };\n  return _jsxs(View, {\n    style: styles.block,\n    children: [position === \"start\" ? _jsx(View, {\n      style: styles.startPartBlock,\n      children: _jsx(Text, {\n        style: styles.endPart,\n        children: icon ? _jsx(AntDesign, {\n          name: icon,\n          size: 24,\n          color: \"black\"\n        }) : null\n      })\n    }) : null, _jsx(TextInput, {\n      numeric: true,\n      keyboardType: numeric ? \"numeric\" : 'text',\n      style: styles.input,\n      value: text,\n      placeholder: placeholder ? placeholder : \"\"\n      ,\n      onChangeText: function onChangeText(e) {\n        return updateFields(e);\n      }\n    }), position === \"end\" ? _jsx(View, {\n      style: styles.endPartBlock,\n      children: _jsx(Text, {\n        style: styles.endPart,\n        children: \"m2\"\n      })\n    }) : null]\n  });\n};\nexport var styles = StyleSheet.create({\n  input: {\n    display: \"flex\",\n    width: \"85%\",\n    padding: 15,\n    paddingLeft: 30\n  },\n  block: {\n    display: \"flex\",\n    alignItems: \"center\",\n    flexDirection: \"row\",\n    justifyContent: \"flex-end\",\n    borderRadius: 10,\n    borderWidth: 0.3,\n    borderColor: \"#808080\",\n    height: 50,\n    marginBottom: 10,\n    paddingLeft: 20\n  },\n  endPartBlock: {\n    display: \"flex\",\n    height: \"100%\",\n    maxWidth: 120,\n    backgroundColor: \"#b4a7d7\",\n    fontWeight: \"700\",\n    color: \"black\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    textAlign: \"center\",\n    fontSize: 17,\n    width: \"25%\",\n    borderTopRightRadius: 10,\n    borderBottomRightRadius: 10\n  },\n  startPartBlock: {\n    display: \"flex\",\n    height: \"100%\",\n    maxWidth: 120,\n    fontWeight: \"700\",\n    color: \"black\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    textAlign: \"center\",\n    fontSize: 17,\n    width: \"15%\",\n    borderTopLeftRadius: 10,\n    borderBottomLeftRadius: 10\n  },\n  endPart: {\n    fontWeight: \"700\",\n    color: \"black\",\n    fontSize: 17\n  }\n});","map":{"version":3,"names":["React","useState","AntDesign","InputBlock","setInputValue","position","icon","placeholder","numeric","text","setText","updateFields","e","newText","checkForNumbersOnly","numbers","i","length","indexOf","substring","styles","block","startPartBlock","endPart","input","endPartBlock","StyleSheet","create","display","width","padding","paddingLeft","alignItems","flexDirection","justifyContent","borderRadius","borderWidth","borderColor","height","marginBottom","maxWidth","backgroundColor","fontWeight","color","textAlign","fontSize","borderTopRightRadius","borderBottomRightRadius","borderTopLeftRadius","borderBottomLeftRadius"],"sources":["/usr/local/var/www/saubram-app/Components/InputBlock.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { StyleSheet, TextInput, View, Text } from \"react-native\";\nimport { AntDesign } from \"@expo/vector-icons\";\n\nexport const InputBlock = ({\n  setInputValue,\n  position = \"end\",\n  icon = null,\n  placeholder = null,\n  numeric = false,\n}) => {\n  const [text, setText] = useState();\n  // setInputValue(333);\n\n  const updateFields = (e) => {\n    if (numeric) {\n      const newText = checkForNumbersOnly(e);\n      // console.log(\"new\", newText);\n      setText(newText);\n      setInputValue(newText);\n    } else {\n      setText(e);\n      setInputValue(e);\n    }\n  };\n\n  const checkForNumbersOnly = (text) => {\n    let newText = \"\";\n    let numbers = \"0123456789\";\n\n    for (var i = 0; i < text.length; i++) {\n      if (numbers.indexOf(text[i]) > -1) {\n        newText = newText + text[i];\n      }\n    }\n\n    return newText.substring(0, 10);\n  };\n\n  return (\n    <View style={styles.block}>\n      {position === \"start\" ? (\n        <View style={styles.startPartBlock}>\n          <Text style={styles.endPart}>\n            {icon ? <AntDesign name={icon} size={24} color=\"black\" /> : null}\n          </Text>\n        </View>\n      ) : null}\n      <TextInput\n        numeric\n        keyboardType={numeric ? \"numeric\" : 'text'}\n        style={styles.input}\n        value={text}\n        placeholder={placeholder ? placeholder : \"\"}\n        // onChange={(e) => updateFields(e)}\n        onChangeText={(e) => updateFields(e)}\n      />\n      {position === \"end\" ? (\n        <View style={styles.endPartBlock}>\n          <Text style={styles.endPart}>m2</Text>\n        </View>\n      ) : null}\n    </View>\n  );\n};\n\nexport const styles = StyleSheet.create({\n  input: {\n    // paddingLeft: 5,\n    display: \"flex\",\n    width: \"85%\",\n    padding: 15,\n    paddingLeft: 30,\n  },\n\n  block: {\n    display: \"flex\",\n    alignItems: \"center\",\n    flexDirection: \"row\",\n    justifyContent: \"flex-end\",\n    borderRadius: 10,\n    borderWidth: 0.3,\n    borderColor: \"#808080\",\n    height: 50,\n    marginBottom: 10,\n\n    paddingLeft: 20,\n  },\n  endPartBlock: {\n    display: \"flex\",\n    height: \"100%\",\n    maxWidth: 120,\n    backgroundColor: \"#b4a7d7\",\n    fontWeight: \"700\",\n    color: \"black\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    textAlign: \"center\",\n    fontSize: 17,\n    width: \"25%\",\n    borderTopRightRadius: 10,\n    borderBottomRightRadius: 10,\n  },\n  startPartBlock: {\n    display: \"flex\",\n    height: \"100%\",\n    maxWidth: 120,\n    // backgroundColor: \"#b4a7d7\",\n    fontWeight: \"700\",\n    color: \"black\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    textAlign: \"center\",\n    fontSize: 17,\n    width: \"15%\",\n    borderTopLeftRadius: 10,\n    borderBottomLeftRadius: 10,\n  },\n  endPart: {\n    fontWeight: \"700\",\n    color: \"black\",\n    fontSize: 17,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
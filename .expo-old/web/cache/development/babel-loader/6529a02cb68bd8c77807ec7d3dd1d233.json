{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useMemo, useState } from \"react\";\nimport { Home } from \"./Components/Home\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { Provider as PaperProvider } from \"react-native-paper\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { PictureBlock } from \"./Components/Steps/PIctureBlock\";\nimport { RoomSize } from \"./Components/Steps/RoomSize\";\nimport { RoomSizeContainer } from \"./Components/Steps/RoomSizeContainer\";\nimport { PictureBlockContainer } from \"./Components/Steps/PIctureBlockContainer\";\nimport { AddressBlockContainer } from \"./Components/Steps/AddressBlockContainer\";\nimport { WhenArrive } from \"./Components/Steps/WhenArrive\";\nimport { WhenArriveContainer } from \"./Components/Steps/WhenArriveContainer\";\nimport { StepInfoContext } from \"./Contexts/StepInfoProvider\";\nimport { SuccessContainer } from \"./Components/Steps/SuccessContainer\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction App() {\n  var Stack = createNativeStackNavigator();\n  var _useState = useState(\"RoomSize\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentStep = _useState2[0],\n    setCurrentStep = _useState2[1];\n  var _useState3 = useState({\n      RoomSize: {\n        roomSizeM2: 0,\n        roomCount: 0,\n        housingType: \"apartment\"\n      },\n      AddressBlock: {\n        address: \"\"\n      },\n      WhenArriveBlock: {\n        date: \"\",\n        time: \"\"\n      }\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    steps = _useState4[0],\n    setSteps = _useState4[1];\n  var serviceList = [\"RoomSize\", \"PictureBlock\", \"AddressBlock\", \"WhenArrive\", \"Success\"];\n  var contextValue = useMemo(function () {\n    return {\n      serviceListData: serviceList,\n      currentStep: currentStep,\n      setCurrentStep: setCurrentStep,\n      steps: steps,\n      setSteps: setSteps\n    };\n  }, [serviceList]);\n  return _jsx(PaperProvider, {\n    children: _jsx(StepInfoContext.Provider, {\n      value: contextValue,\n      children: _jsx(NavigationContainer, {\n        children: _jsxs(Stack.Navigator, {\n          initialRouteName: \"Home\",\n          children: [_jsx(Stack.Screen, {\n            name: \"ServiceList\",\n            component: Home,\n            options: function options(_ref) {\n              var route = _ref.route;\n              return {\n                title: \"Service list\"\n              };\n            }\n          }), _jsx(Stack.Screen, {\n            name: \"RoomSizeContainer\",\n            component: RoomSizeContainer,\n            options: function options(_ref2) {\n              var navigation = _ref2.navigation,\n                route = _ref2.route;\n              return {\n                headerTitle: function headerTitle(props) {\n                  return _jsx(Text, {\n                    children: \"Room\"\n                  });\n                },\n                headerRight: function headerRight() {\n                  return _jsxs(Text, {\n                    onPress: function onPress() {\n                      return navigation.navigate(\"ServiceList\", {});\n                    },\n                    children: [_jsx(Ionicons, {\n                      name: \"home\",\n                      size: 24,\n                      color: \"black\"\n                    }), \" Home\"]\n                  });\n                }\n              };\n            }\n          }), _jsx(Stack.Screen, {\n            name: \"PictureBlockContainer\",\n            component: PictureBlockContainer,\n            options: function options(_ref3) {\n              var route = _ref3.route;\n              return {\n                title: \"Picture\"\n              };\n            }\n          }), _jsx(Stack.Screen, {\n            name: \"AddressBlockContainer\",\n            component: AddressBlockContainer,\n            options: function options(_ref4) {\n              var route = _ref4.route;\n              return {\n                title: \"Address\"\n              };\n            }\n          }), _jsx(Stack.Screen, {\n            name: \"WhenArriveContainer\",\n            component: WhenArriveContainer,\n            options: function options(_ref5) {\n              var route = _ref5.route;\n              return {\n                title: \"Arrival\"\n              };\n            }\n          }), _jsx(Stack.Screen, {\n            name: \"SuccessContainer\",\n            component: SuccessContainer,\n            options: function options(_ref6) {\n              var route = _ref6.route;\n              return {\n                title: \"Success\"\n              };\n            }\n          })]\n        })\n      })\n    })\n  });\n}\nexport default App;","map":{"version":3,"names":["React","useMemo","useState","Home","NavigationContainer","createNativeStackNavigator","Provider","PaperProvider","PictureBlock","RoomSize","RoomSizeContainer","PictureBlockContainer","AddressBlockContainer","WhenArrive","WhenArriveContainer","StepInfoContext","SuccessContainer","Ionicons","App","Stack","currentStep","setCurrentStep","roomSizeM2","roomCount","housingType","AddressBlock","address","WhenArriveBlock","date","time","steps","setSteps","serviceList","contextValue","serviceListData","route","title","navigation","headerTitle","props","headerRight","navigate"],"sources":["/usr/local/var/www/saubram-app/App.js"],"sourcesContent":["import React, {useMemo, useState} from \"react\";\nimport {Home} from \"./Components/Home\";\nimport {NavigationContainer} from \"@react-navigation/native\";\nimport {createNativeStackNavigator} from \"@react-navigation/native-stack\";\nimport {Provider as PaperProvider} from \"react-native-paper\";\nimport {Button, Text, View} from \"react-native\";\nimport {PictureBlock} from \"./Components/Steps/PIctureBlock\";\nimport {RoomSize} from \"./Components/Steps/RoomSize\";\nimport {RoomSizeContainer} from \"./Components/Steps/RoomSizeContainer\";\nimport {PictureBlockContainer} from \"./Components/Steps/PIctureBlockContainer\";\nimport {AddressBlockContainer} from \"./Components/Steps/AddressBlockContainer\";\nimport {WhenArrive} from \"./Components/Steps/WhenArrive\";\nimport {WhenArriveContainer} from \"./Components/Steps/WhenArriveContainer\";\nimport {StepInfoContext} from \"./Contexts/StepInfoProvider\";\nimport {SuccessContainer} from \"./Components/Steps/SuccessContainer\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\n\nfunction App() {\n    const Stack = createNativeStackNavigator();\n\n    const [currentStep, setCurrentStep] = useState(\"RoomSize\");\n    const [steps, setSteps] = useState({\n        RoomSize: {\n            roomSizeM2: 0,\n            roomCount: 0,\n            housingType: \"apartment\",\n        },\n        AddressBlock: {\n            address: \"\",\n        },\n        WhenArriveBlock: {\n            date: \"\",\n            time: \"\",\n        },\n    });\n\n    const serviceList = [\n        \"RoomSize\",\n        \"PictureBlock\",\n        \"AddressBlock\",\n        \"WhenArrive\",\n        \"Success\",\n    ];\n    const contextValue = useMemo(\n        () => ({\n            serviceListData: serviceList,\n            currentStep,\n            setCurrentStep,\n            steps,\n            setSteps,\n        }),\n        [serviceList]\n    );\n\n    return (\n        <PaperProvider>\n            <StepInfoContext.Provider value={contextValue}>\n                <NavigationContainer>\n                    <Stack.Navigator initialRouteName=\"Home\">\n                        <Stack.Screen name=\"ServiceList\" component={Home} options={({route}) => {\n                            return {title: \"Service list\"};\n                        }}/>\n                        {/*<Stack.Screen*/}\n                        {/*  name=\"Item\"*/}\n                        {/*  component={ServiceView}*/}\n                        {/*  options={({ route }) => {*/}\n                        {/*    return { title: route.params.title };*/}\n                        {/*  }}*/}\n                        {/*/>*/}\n                        <Stack.Screen\n                            name=\"RoomSizeContainer\"\n                            component={RoomSizeContainer}\n                            options={({navigation, route}) => ({\n                                headerTitle: (props) => <Text>Room</Text>,\n                                headerRight: () => (\n                                    <Text onPress={() => navigation.navigate(\"ServiceList\", {})}>\n                                        <Ionicons name=\"home\" size={24} color=\"black\"/> Home\n                                    </Text>\n                                ),\n                            })}\n                        />\n\n                        <Stack.Screen\n                            name=\"PictureBlockContainer\"\n                            component={PictureBlockContainer}\n                            options={({route}) => {\n                                return {title: \"Picture\"};\n                            }}\n                        />\n\n                        <Stack.Screen\n                            name=\"AddressBlockContainer\"\n                            component={AddressBlockContainer}\n                            options={({route}) => {\n                                return {title: \"Address\"};\n                            }}\n                        />\n\n                        <Stack.Screen\n                            name=\"WhenArriveContainer\"\n                            component={WhenArriveContainer}\n                            options={({route}) => {\n                                return {title: \"Arrival\"};\n                            }}\n                        />\n\n                        <Stack.Screen\n                            name=\"SuccessContainer\"\n                            component={SuccessContainer}\n                            options={({route}) => {\n                                return {title: \"Success\"};\n                            }}\n                        />\n                    </Stack.Navigator>\n                </NavigationContainer>\n            </StepInfoContext.Provider>\n        </PaperProvider>\n    );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
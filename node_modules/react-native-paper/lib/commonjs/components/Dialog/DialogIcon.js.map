{"version":3,"sources":["DialogIcon.tsx"],"names":["DialogIcon","size","color","icon","theme","isV3","iconColor","colors","secondary","styles","wrapper","displayName","StyleSheet","create","alignItems","justifyContent","paddingTop"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,UAAU,GAAG,QAAuC;AAAA,MAAtC;AAAEC,IAAAA,IAAI,GAAG,EAAT;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA;AAApB,GAAsC;AACxD,QAAMC,KAAK,GAAG,wBAAd;;AAEA,MAAI,CAACA,KAAK,CAACC,IAAX,EAAiB;AACf,WAAO,IAAP;AACD,GALuD,CAOxD;;;AACA,QAAMC,SAAS,GAAGJ,KAAK,IAAIE,KAAK,CAACG,MAAN,CAAaC,SAAxC;AAEA,sBACE,oBAAC,iBAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC;AAApB,kBACE,oBAAC,aAAD;AAAM,IAAA,MAAM,EAAEP,IAAd;AAAoB,IAAA,KAAK,EAAEG,SAA3B;AAAsC,IAAA,IAAI,EAAEL;AAA5C,IADF,CADF;AAKD,CAfD;;;AAiBAD,UAAU,CAACW,WAAX,GAAyB,aAAzB;;AAEA,MAAMF,MAAM,GAAGG,wBAAWC,MAAX,CAAkB;AAC/BH,EAAAA,OAAO,EAAE;AACPI,IAAAA,UAAU,EAAE,QADL;AAEPC,IAAAA,cAAc,EAAE,QAFT;AAGPC,IAAAA,UAAU,EAAE;AAHL;AADsB,CAAlB,CAAf;;eAQehB,U,EAEf","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { useTheme } from '../../core/theming';\nimport Icon, { IconSource } from '../Icon';\n\nexport type Props = {\n  /**\n   *  Custom color for action icon.\n   */\n  color?: string;\n  /**\n   * Name of the icon to show.\n   */\n  icon: IconSource;\n  /**\n   * Optional icon size.\n   */\n  size?: number;\n};\n\n/**\n * @supported Available in v5.x with theme version 3\n * A component to show an icon in a Dialog.\n *\n *  <div class=\"screenshots\">\n *   <img class=\"small\" src=\"screenshots/dialog-icon.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { StyleSheet } from 'react-native';\n * import { Paragraph, Dialog, Portal } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [visible, setVisible] = React.useState(false);\n *\n *   const hideDialog = () => setVisible(false);\n *\n *   return (\n *     <Portal>\n *       <Dialog visible={visible} onDismiss={hideDialog}>\n *         <Dialog.Icon icon=\"alert\" />\n *         <Dialog.Title style={styles.title}>This is a title</Dialog.Title>\n *         <Dialog.Content>\n *           <Paragraph>This is simple dialog</Paragraph>\n *         </Dialog.Content>\n *       </Dialog>\n *     </Portal>\n *   );\n * };\n *\n * const styles = StyleSheet.create({\n *   title: {\n *     textAlign: 'center',\n *   },\n * })\n *\n * export default MyComponent;\n * ```\n */\nconst DialogIcon = ({ size = 24, color, icon }: Props) => {\n  const theme = useTheme();\n\n  if (!theme.isV3) {\n    return null;\n  }\n\n  //@ts-ignore\n  const iconColor = color || theme.colors.secondary;\n\n  return (\n    <View style={styles.wrapper}>\n      <Icon source={icon} color={iconColor} size={size} />\n    </View>\n  );\n};\n\nDialogIcon.displayName = 'Dialog.Icon';\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingTop: 24,\n  },\n});\n\nexport default DialogIcon;\n\n// @component-docs ignore-next-line\nexport { DialogIcon };\n"]}
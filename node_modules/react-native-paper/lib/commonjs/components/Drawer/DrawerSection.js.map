{"version":3,"sources":["DrawerSection.tsx"],"names":["DrawerSection","children","title","theme","style","rest","isV3","titleColor","colors","onSurfaceVariant","text","alpha","rgb","string","titleMargin","styles","container","titleContainer","v3TitleContainer","color","marginLeft","typescale","titleSmall","fonts","medium","horizontalInset","bold","divider","v3Divider","displayName","StyleSheet","create","marginBottom","height","justifyContent","marginTop","backgroundColor","MD3Colors","neutralVariant50"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;;;;;;;;;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,aAAa,GAAG,QAAuD;AAAA,MAAtD;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA,KAAnB;AAA0BC,IAAAA,KAA1B;AAAiC,OAAGC;AAApC,GAAsD;AAC3E,QAAM;AAAEC,IAAAA;AAAF,MAAWH,KAAjB;AACA,QAAMI,UAAU,GAAGD,IAAI,GACnBH,KAAK,CAACK,MAAN,CAAaC,gBADM,GAEnB,oBAAMN,KAAK,CAACK,MAAN,CAAaE,IAAnB,EAAyBC,KAAzB,CAA+B,IAA/B,EAAqCC,GAArC,GAA2CC,MAA3C,EAFJ;AAGA,QAAMC,WAAW,GAAGR,IAAI,GAAG,EAAH,GAAQ,EAAhC;AACA,sBACE,oBAAC,iBAAD;AAAM,IAAA,KAAK,EAAE,CAACS,MAAM,CAACC,SAAR,EAAmBZ,KAAnB;AAAb,KAA4CC,IAA5C,GACGH,KAAK,iBACJ,oBAAC,iBAAD;AAAM,IAAA,KAAK,EAAE,CAACa,MAAM,CAACE,cAAR,EAAwBX,IAAI,IAAIS,MAAM,CAACG,gBAAvC;AAAb,KACGhB,KAAK,iBACJ,oBAAC,aAAD;AACE,IAAA,OAAO,EAAC,YADV;AAEE,IAAA,aAAa,EAAE,CAFjB;AAGE,IAAA,KAAK,EAAE,CACL;AACEiB,MAAAA,KAAK,EAAEZ,UADT;AAEEa,MAAAA,UAAU,EAAEN,WAFd;AAGE,UAAIR,IAAI,GAAGH,KAAK,CAACkB,SAAN,CAAgBC,UAAnB,GAAgCnB,KAAK,CAACoB,KAAN,CAAYC,MAApD;AAHF,KADK;AAHT,KAWGtB,KAXH,CAFJ,CAFJ,EAoBGD,QApBH,eAqBE,oBAAC,gBAAD,eACOK,IAAI,IAAI;AAAEmB,IAAAA,eAAe,EAAE,IAAnB;AAAyBC,IAAAA,IAAI,EAAE;AAA/B,GADf;AAEE,IAAA,KAAK,EAAE,CAACX,MAAM,CAACY,OAAR,EAAiBrB,IAAI,IAAIS,MAAM,CAACa,SAAhC;AAFT,KArBF,CADF;AA4BD,CAlCD;;AAoCA5B,aAAa,CAAC6B,WAAd,GAA4B,gBAA5B;;AAEA,MAAMd,MAAM,GAAGe,wBAAWC,MAAX,CAAkB;AAC/Bf,EAAAA,SAAS,EAAE;AACTgB,IAAAA,YAAY,EAAE;AADL,GADoB;AAI/Bf,EAAAA,cAAc,EAAE;AACdgB,IAAAA,MAAM,EAAE,EADM;AAEdC,IAAAA,cAAc,EAAE;AAFF,GAJe;AAQ/BhB,EAAAA,gBAAgB,EAAE;AAChBe,IAAAA,MAAM,EAAE;AADQ,GARa;AAW/BN,EAAAA,OAAO,EAAE;AACPQ,IAAAA,SAAS,EAAE;AADJ,GAXsB;AAc/BP,EAAAA,SAAS,EAAE;AACTQ,IAAAA,eAAe,EAAEC,kBAAUC;AADlB;AAdoB,CAAlB,CAAf;;eAmBe,wBAAUtC,aAAV,C","sourcesContent":["import color from 'color';\nimport * as React from 'react';\nimport { View, ViewStyle, StyleSheet, StyleProp } from 'react-native';\nimport Text from '../Typography/Text';\nimport Divider from '../Divider';\nimport { withTheme } from '../../core/theming';\nimport type { Theme } from '../../types';\nimport { MD3Colors } from '../../styles/themes/v3/tokens';\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Title to show as the header for the section.\n   */\n  title?: string;\n  /**\n   * Content of the `Drawer.Section`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\n/**\n * A component to group content inside a navigation drawer.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"small\" src=\"screenshots/drawer-section.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Drawer } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [active, setActive] = React.useState('');\n *\n *   return (\n *     <Drawer.Section title=\"Some title\">\n *       <Drawer.Item\n *         label=\"First Item\"\n *         active={active === 'first'}\n *         onPress={() => setActive('first')}\n *       />\n *       <Drawer.Item\n *         label=\"Second Item\"\n *         active={active === 'second'}\n *         onPress={() => setActive('second')}\n *       />\n *     </Drawer.Section>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst DrawerSection = ({ children, title, theme, style, ...rest }: Props) => {\n  const { isV3 } = theme;\n  const titleColor = isV3\n    ? theme.colors.onSurfaceVariant\n    : color(theme.colors.text).alpha(0.54).rgb().string();\n  const titleMargin = isV3 ? 28 : 16;\n  return (\n    <View style={[styles.container, style]} {...rest}>\n      {title && (\n        <View style={[styles.titleContainer, isV3 && styles.v3TitleContainer]}>\n          {title && (\n            <Text\n              variant=\"titleSmall\"\n              numberOfLines={1}\n              style={[\n                {\n                  color: titleColor,\n                  marginLeft: titleMargin,\n                  ...(isV3 ? theme.typescale.titleSmall : theme.fonts.medium),\n                },\n              ]}\n            >\n              {title}\n            </Text>\n          )}\n        </View>\n      )}\n      {children}\n      <Divider\n        {...(isV3 && { horizontalInset: true, bold: true })}\n        style={[styles.divider, isV3 && styles.v3Divider]}\n      />\n    </View>\n  );\n};\n\nDrawerSection.displayName = 'Drawer.Section';\n\nconst styles = StyleSheet.create({\n  container: {\n    marginBottom: 4,\n  },\n  titleContainer: {\n    height: 40,\n    justifyContent: 'center',\n  },\n  v3TitleContainer: {\n    height: 56,\n  },\n  divider: {\n    marginTop: 4,\n  },\n  v3Divider: {\n    backgroundColor: MD3Colors.neutralVariant50,\n  },\n});\n\nexport default withTheme(DrawerSection);\n"]}
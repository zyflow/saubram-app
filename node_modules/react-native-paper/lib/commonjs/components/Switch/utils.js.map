{"version":3,"sources":["utils.ts"],"names":["getCheckedColor","theme","color","isV3","colors","primary","accent","getThumbTintColor","disabled","value","checkedColor","isIOS","Platform","OS","undefined","dark","grey800","grey400","grey50","getOnTintColor","white","alpha","rgb","string","black","grey700","getSwitchColor","onTintColor","thumbTintColor"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;;;AAgBA,MAAMA,eAAe,GAAG,QAMlB;AAAA,MANmB;AACvBC,IAAAA,KADuB;AAEvBC,IAAAA;AAFuB,GAMnB;;AACJ,MAAIA,KAAJ,EAAW;AACT,WAAOA,KAAP;AACD;;AAED,MAAID,KAAK,CAACE,IAAV,EAAgB;AACd,WAAOF,KAAK,CAACG,MAAN,CAAaC,OAApB;AACD;;AAED,SAAOJ,KAAK,CAACG,MAAN,CAAaE,MAApB;AACD,CAhBD;;AAkBA,MAAMC,iBAAiB,GAAG,SAKkB;AAAA,MALjB;AACzBN,IAAAA,KADyB;AAEzBO,IAAAA,QAFyB;AAGzBC,IAAAA,KAHyB;AAIzBC,IAAAA;AAJyB,GAKiB;AAC1C,QAAMC,KAAK,GAAGC,sBAASC,EAAT,KAAgB,KAA9B;;AAEA,MAAIF,KAAJ,EAAW;AACT,WAAOG,SAAP;AACD;;AAED,MAAIN,QAAJ,EAAc;AACZ,QAAIP,KAAK,CAACc,IAAV,EAAgB;AACd,aAAOC,eAAP;AACD;;AACD,WAAOC,eAAP;AACD;;AAED,MAAIR,KAAJ,EAAW;AACT,WAAOC,YAAP;AACD;;AAED,MAAIT,KAAK,CAACc,IAAV,EAAgB;AACd,WAAOE,eAAP;AACD;;AACD,SAAOC,cAAP;AACD,CA3BD;;AA6BA,MAAMC,cAAc,GAAG,SAKqB;AAAA,MALpB;AACtBlB,IAAAA,KADsB;AAEtBO,IAAAA,QAFsB;AAGtBC,IAAAA,KAHsB;AAItBC,IAAAA;AAJsB,GAKoB;AAC1C,QAAMC,KAAK,GAAGC,sBAASC,EAAT,KAAgB,KAA9B;;AAEA,MAAIF,KAAJ,EAAW;AACT,WAAOD,YAAP;AACD;;AAED,MAAIF,QAAJ,EAAc;AACZ,QAAIP,KAAK,CAACc,IAAV,EAAgB;AACd,UAAId,KAAK,CAACE,IAAV,EAAgB;AACd,eAAO,oBAASiB,aAAT,EAAgBC,KAAhB,CAAsB,IAAtB,EAA4BC,GAA5B,GAAkCC,MAAlC,EAAP;AACD;;AACD,aAAO,oBAASH,aAAT,EAAgBC,KAAhB,CAAsB,GAAtB,EAA2BC,GAA3B,GAAiCC,MAAjC,EAAP;AACD;;AACD,WAAO,oBAASC,aAAT,EAAgBH,KAAhB,CAAsB,IAAtB,EAA4BC,GAA5B,GAAkCC,MAAlC,EAAP;AACD;;AAED,MAAId,KAAJ,EAAW;AACT,WAAO,oBAASC,YAAT,EAAuBW,KAAvB,CAA6B,GAA7B,EAAkCC,GAAlC,GAAwCC,MAAxC,EAAP;AACD;;AAED,MAAItB,KAAK,CAACc,IAAV,EAAgB;AACd,WAAOU,eAAP;AACD;;AACD,SAAO,oBAAP;AACD,CA9BD;;AAgCO,MAAMC,cAAc,GAAG,SAKQ;AAAA,MALP;AAC7BzB,IAAAA,KAD6B;AAE7BO,IAAAA,QAF6B;AAG7BC,IAAAA,KAH6B;AAI7BP,IAAAA;AAJ6B,GAKO;AACpC,QAAMQ,YAAY,GAAGV,eAAe,CAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,CAApC;AAEA,SAAO;AACLyB,IAAAA,WAAW,EAAER,cAAc,CAAC;AAAElB,MAAAA,KAAF;AAASO,MAAAA,QAAT;AAAmBC,MAAAA,KAAnB;AAA0BC,MAAAA;AAA1B,KAAD,CADtB;AAELkB,IAAAA,cAAc,EAAErB,iBAAiB,CAAC;AAAEN,MAAAA,KAAF;AAASO,MAAAA,QAAT;AAAmBC,MAAAA,KAAnB;AAA0BC,MAAAA;AAA1B,KAAD,CAF5B;AAGLA,IAAAA;AAHK,GAAP;AAKD,CAbM","sourcesContent":["import { Platform } from 'react-native';\nimport setColor from 'color';\n\nimport {\n  grey400,\n  grey800,\n  grey50,\n  grey700,\n  white,\n  black,\n} from '../../styles/themes/v2/colors';\nimport type { Theme } from '../../types';\n\ntype BaseProps = {\n  theme: Theme;\n  disabled?: boolean;\n  value?: boolean;\n};\n\nconst getCheckedColor = ({\n  theme,\n  color,\n}: {\n  theme: Theme;\n  color?: string;\n}) => {\n  if (color) {\n    return color;\n  }\n\n  if (theme.isV3) {\n    return theme.colors.primary;\n  }\n\n  return theme.colors.accent;\n};\n\nconst getThumbTintColor = ({\n  theme,\n  disabled,\n  value,\n  checkedColor,\n}: BaseProps & { checkedColor: string }) => {\n  const isIOS = Platform.OS === 'ios';\n\n  if (isIOS) {\n    return undefined;\n  }\n\n  if (disabled) {\n    if (theme.dark) {\n      return grey800;\n    }\n    return grey400;\n  }\n\n  if (value) {\n    return checkedColor;\n  }\n\n  if (theme.dark) {\n    return grey400;\n  }\n  return grey50;\n};\n\nconst getOnTintColor = ({\n  theme,\n  disabled,\n  value,\n  checkedColor,\n}: BaseProps & { checkedColor: string }) => {\n  const isIOS = Platform.OS === 'ios';\n\n  if (isIOS) {\n    return checkedColor;\n  }\n\n  if (disabled) {\n    if (theme.dark) {\n      if (theme.isV3) {\n        return setColor(white).alpha(0.06).rgb().string();\n      }\n      return setColor(white).alpha(0.1).rgb().string();\n    }\n    return setColor(black).alpha(0.12).rgb().string();\n  }\n\n  if (value) {\n    return setColor(checkedColor).alpha(0.5).rgb().string();\n  }\n\n  if (theme.dark) {\n    return grey700;\n  }\n  return 'rgb(178, 175, 177)';\n};\n\nexport const getSwitchColor = ({\n  theme,\n  disabled,\n  value,\n  color,\n}: BaseProps & { color?: string }) => {\n  const checkedColor = getCheckedColor({ theme, color });\n\n  return {\n    onTintColor: getOnTintColor({ theme, disabled, value, checkedColor }),\n    thumbTintColor: getThumbTintColor({ theme, disabled, value, checkedColor }),\n    checkedColor,\n  };\n};\n"]}
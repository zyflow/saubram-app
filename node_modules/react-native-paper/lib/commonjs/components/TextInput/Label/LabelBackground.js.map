{"version":3,"sources":["LabelBackground.tsx"],"names":["LabelBackground","parentState","labelProps","placeholderStyle","baseLabelTranslateX","topPosition","hasActiveOutline","label","backgroundColor","roundness","labelStyle","maxFontSizeMultiplier","hasFocus","value","opacity","labeled","interpolate","inputRange","outputRange","isV3","labelTranslationX","translateX","labelTextScaleY","scaleY","labelTextTransform","transform","labelTextWidth","width","labelLayout","paddingHorizontal","maxWidth","StyleSheet","absoluteFill","styles","view","maxHeight","Math","max","bottom","outlinedLabel","md3OutlinedLabel","top","create","position","left","color"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Animated, StyleSheet } from 'react-native';\nimport { useTheme } from '../../../core/theming';\n\nimport AnimatedText from '../../Typography/AnimatedText';\n\nimport type { LabelBackgroundProps } from '../types';\n\nconst LabelBackground = ({\n  parentState,\n  labelProps: {\n    placeholderStyle,\n    baseLabelTranslateX,\n    topPosition,\n    hasActiveOutline,\n    label,\n    backgroundColor,\n    roundness,\n  },\n  labelStyle,\n  maxFontSizeMultiplier,\n}: LabelBackgroundProps) => {\n  const hasFocus = hasActiveOutline || parentState.value;\n  const opacity = parentState.labeled.interpolate({\n    inputRange: [0, 1],\n    outputRange: [hasFocus ? 1 : 0, 0],\n  });\n\n  const { isV3 } = useTheme();\n\n  const labelTranslationX = {\n    translateX: parentState.labeled.interpolate({\n      inputRange: [0, 1],\n      outputRange: [-baseLabelTranslateX, 0],\n    }),\n  };\n\n  const labelTextScaleY = {\n    scaleY: parentState.labeled.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0.2, 1],\n    }),\n  };\n\n  const labelTextTransform = [...labelStyle.transform, labelTextScaleY];\n\n  const labelTextWidth = isV3\n    ? {\n        width:\n          parentState.labelLayout.width - placeholderStyle.paddingHorizontal,\n      }\n    : {\n        maxWidth:\n          parentState.labelLayout.width -\n          2 * placeholderStyle.paddingHorizontal,\n      };\n\n  return label\n    ? [\n        <Animated.View\n          key=\"labelBackground-view\"\n          pointerEvents=\"none\"\n          style={[\n            StyleSheet.absoluteFill,\n            styles.view,\n            {\n              backgroundColor,\n              maxHeight: Math.max(roundness / 3, 2),\n              opacity,\n              bottom: Math.max(roundness, 2),\n              transform: [labelTranslationX],\n            },\n          ]}\n        />,\n        <AnimatedText\n          key=\"labelBackground-text\"\n          style={[\n            placeholderStyle,\n            labelStyle,\n            styles.outlinedLabel,\n            isV3 && styles.md3OutlinedLabel,\n            {\n              top: topPosition + 1,\n              backgroundColor,\n              opacity,\n              transform: labelTextTransform,\n            },\n            labelTextWidth,\n          ]}\n          numberOfLines={1}\n          maxFontSizeMultiplier={maxFontSizeMultiplier}\n        >\n          {label}\n        </AnimatedText>,\n      ]\n    : null;\n};\n\nexport default LabelBackground;\n\nconst styles = StyleSheet.create({\n  view: {\n    position: 'absolute',\n    top: 6,\n    left: 10,\n    width: 12,\n  },\n  outlinedLabel: {\n    position: 'absolute',\n    left: 18,\n    paddingHorizontal: 0,\n    color: 'transparent',\n  },\n  md3OutlinedLabel: {\n    left: 8,\n  },\n});\n"]}
{"version":3,"sources":["TextInputFlat.tsx"],"names":["TextInputFlat","disabled","editable","label","error","selectionColor","underlineColor","activeUnderlineColor","dense","style","theme","render","props","multiline","parentState","innerRef","onFocus","forceFocus","onBlur","onChangeText","onLayoutAnimatedText","onLeftAffixLayoutChange","onRightAffixLayoutChange","left","right","placeholderTextColor","testID","rest","isAndroid","Platform","OS","colors","isV3","roundness","font","fonts","regular","hasActiveOutline","focused","LABEL_PADDING_TOP","FLAT_INPUT_OFFSET","MIN_HEIGHT","fontSize","fontSizeStyle","fontWeight","height","paddingHorizontal","textAlign","viewStyle","StyleSheet","flatten","MAXIMIZED_LABEL_FONT_SIZE","isPaddingHorizontalPassed","undefined","adornmentConfig","paddingLeft","paddingRight","leftLayout","rightLayout","rightAffixWidth","width","ADORNMENT_SIZE","leftAffixWidth","adornmentStyleAdjustmentForNativeInput","inputOffset","mode","InputMode","Flat","inputTextColor","activeColor","underlineColorCustom","placeholderColor","errorColor","backgroundColor","containerStyle","borderTopLeftRadius","borderTopRightRadius","labelScale","MINIMIZED_LABEL_FONT_SIZE","fontScale","labelWidth","labelLayout","labelHeight","labelHalfWidth","labelHalfHeight","baseLabelTranslateX","I18nManager","isRTL","minInputHeight","MIN_DENSE_HEIGHT_WL","MIN_DENSE_HEIGHT","LABEL_PADDING_TOP_DENSE","inputHeight","topPosition","console","warn","paddingSettings","offset","scale","styles","inputFlatDense","inputFlat","pad","paddingFlat","baseLabelTranslateY","MINIMIZED_LABEL_Y_OFFSET","placeholderOpacity","labeled","measured","minHeight","flatHeight","iconTopPosition","leftAffixTopPosition","affixHeight","rightAffixTopPosition","labelProps","placeholderStyle","placeholder","wiggleOffsetX","LABEL_WIGGLE_X_OFFSET","paddingOffset","maxFontSizeMultiplier","affixTopPosition","AdornmentSide","Left","Right","onAffixChange","adornmentProps","AdornmentType","Affix","Icon","isTextInputFocused","length","textStyle","visible","labelContainer","absoluteFill","densePatchContainer","patchContainer","ref","underlineColorAndroid","input","color","textAlignVertical","outline","Underline","activeScale","underline","md3Underline","transform","scaleY","create","position","bottom","zIndex","paddingTop","paddingBottom","flexGrow","margin"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  View,\n  Animated,\n  TextInput as NativeTextInput,\n  StyleSheet,\n  I18nManager,\n  Platform,\n  TextStyle,\n} from 'react-native';\nimport InputLabel from './Label/InputLabel';\nimport TextInputAdornment, {\n  TextInputAdornmentProps,\n} from './Adornment/TextInputAdornment';\nimport type { RenderProps, ChildTextInputProps } from './types';\nimport { useTheme } from '../../core/theming';\n\nimport {\n  MAXIMIZED_LABEL_FONT_SIZE,\n  MINIMIZED_LABEL_FONT_SIZE,\n  LABEL_WIGGLE_X_OFFSET,\n  ADORNMENT_SIZE,\n  MINIMIZED_LABEL_Y_OFFSET,\n  LABEL_PADDING_TOP_DENSE,\n  MIN_DENSE_HEIGHT_WL,\n  MIN_DENSE_HEIGHT,\n} from './constants';\n\nimport {\n  calculateLabelTopPosition,\n  calculateInputHeight,\n  calculatePadding,\n  adjustPaddingFlat,\n  Padding,\n  interpolatePlaceholder,\n  calculateFlatAffixTopPosition,\n  calculateFlatInputHorizontalPadding,\n  getFlatInputColors,\n  getConstants,\n} from './helpers';\nimport {\n  getAdornmentConfig,\n  getAdornmentStyleAdjustmentForNativeInput,\n} from './Adornment/TextInputAdornment';\nimport { AdornmentSide, AdornmentType, InputMode } from './Adornment/enums';\n\nconst TextInputFlat = ({\n  disabled = false,\n  editable = true,\n  label,\n  error = false,\n  selectionColor,\n  underlineColor,\n  activeUnderlineColor,\n  dense,\n  style,\n  theme,\n  render = (props: RenderProps) => <NativeTextInput {...props} />,\n  multiline = false,\n  parentState,\n  innerRef,\n  onFocus,\n  forceFocus,\n  onBlur,\n  onChangeText,\n  onLayoutAnimatedText,\n  onLeftAffixLayoutChange,\n  onRightAffixLayoutChange,\n  left,\n  right,\n  placeholderTextColor,\n  testID = 'text-input',\n  ...rest\n}: ChildTextInputProps) => {\n  const isAndroid = Platform.OS === 'android';\n  const { colors, isV3, roundness } = theme;\n  const font = !isV3 ? theme.fonts.regular : {};\n  const hasActiveOutline = parentState.focused || error;\n\n  const { LABEL_PADDING_TOP, FLAT_INPUT_OFFSET, MIN_HEIGHT } =\n    getConstants(isV3);\n\n  const {\n    fontSize: fontSizeStyle,\n    fontWeight,\n    height,\n    paddingHorizontal,\n    textAlign,\n    ...viewStyle\n  } = (StyleSheet.flatten(style) || {}) as TextStyle;\n  const fontSize = fontSizeStyle || MAXIMIZED_LABEL_FONT_SIZE;\n\n  const isPaddingHorizontalPassed =\n    paddingHorizontal !== undefined && typeof paddingHorizontal === 'number';\n\n  const adornmentConfig = getAdornmentConfig({\n    left,\n    right,\n  });\n\n  let { paddingLeft, paddingRight } = calculateFlatInputHorizontalPadding({\n    adornmentConfig,\n    isV3,\n  });\n\n  if (isPaddingHorizontalPassed) {\n    paddingLeft = paddingHorizontal as number;\n    paddingRight = paddingHorizontal as number;\n  }\n\n  const { leftLayout, rightLayout } = parentState;\n\n  const rightAffixWidth = right\n    ? rightLayout.width || ADORNMENT_SIZE\n    : ADORNMENT_SIZE;\n\n  const leftAffixWidth = left\n    ? leftLayout.width || ADORNMENT_SIZE\n    : ADORNMENT_SIZE;\n\n  const adornmentStyleAdjustmentForNativeInput =\n    getAdornmentStyleAdjustmentForNativeInput({\n      adornmentConfig,\n      rightAffixWidth,\n      leftAffixWidth,\n      paddingHorizontal,\n      inputOffset: FLAT_INPUT_OFFSET,\n      mode: InputMode.Flat,\n      isV3,\n    });\n\n  const {\n    inputTextColor,\n    activeColor,\n    underlineColorCustom,\n    placeholderColor,\n    errorColor,\n    backgroundColor,\n  } = getFlatInputColors({\n    underlineColor,\n    activeUnderlineColor,\n    disabled,\n    error,\n    theme,\n  });\n\n  const containerStyle = {\n    backgroundColor,\n    borderTopLeftRadius: theme.roundness,\n    borderTopRightRadius: theme.roundness,\n  };\n\n  const labelScale = MINIMIZED_LABEL_FONT_SIZE / fontSize;\n  const fontScale = MAXIMIZED_LABEL_FONT_SIZE / fontSize;\n\n  const labelWidth = parentState.labelLayout.width;\n  const labelHeight = parentState.labelLayout.height;\n  const labelHalfWidth = labelWidth / 2;\n  const labelHalfHeight = labelHeight / 2;\n\n  const baseLabelTranslateX =\n    (I18nManager.isRTL ? 1 : -1) *\n      (labelHalfWidth - (labelScale * labelWidth) / 2) +\n    (1 - labelScale) * (I18nManager.isRTL ? -1 : 1) * paddingLeft;\n\n  const minInputHeight = dense\n    ? (label ? MIN_DENSE_HEIGHT_WL : MIN_DENSE_HEIGHT) - LABEL_PADDING_TOP_DENSE\n    : MIN_HEIGHT - LABEL_PADDING_TOP;\n\n  const inputHeight = calculateInputHeight(labelHeight, height, minInputHeight);\n\n  const topPosition = calculateLabelTopPosition(\n    labelHeight,\n    inputHeight,\n    multiline && height ? 0 : !height ? minInputHeight / 2 : 0\n  );\n\n  if (height && typeof height !== 'number') {\n    // eslint-disable-next-line\n    console.warn('Currently we support only numbers in height prop');\n  }\n\n  const paddingSettings = {\n    height: height ? +height : null,\n    labelHalfHeight,\n    offset: FLAT_INPUT_OFFSET,\n    multiline: multiline ? multiline : null,\n    dense: dense ? dense : null,\n    topPosition,\n    fontSize,\n    label,\n    scale: fontScale,\n    isAndroid,\n    styles: StyleSheet.flatten(\n      dense ? styles.inputFlatDense : styles.inputFlat\n    ) as Padding,\n  };\n\n  const pad = calculatePadding(paddingSettings);\n\n  const paddingFlat = adjustPaddingFlat({\n    ...paddingSettings,\n    pad,\n  });\n\n  const baseLabelTranslateY =\n    -labelHalfHeight - (topPosition + MINIMIZED_LABEL_Y_OFFSET);\n\n  const placeholderOpacity = hasActiveOutline\n    ? interpolatePlaceholder(parentState.labeled, hasActiveOutline)\n    : parentState.labelLayout.measured\n    ? 1\n    : 0;\n\n  const minHeight =\n    height ||\n    (dense ? (label ? MIN_DENSE_HEIGHT_WL : MIN_DENSE_HEIGHT) : MIN_HEIGHT);\n\n  const flatHeight =\n    inputHeight +\n    (!height ? (dense ? LABEL_PADDING_TOP_DENSE : LABEL_PADDING_TOP) : 0);\n\n  const iconTopPosition = (flatHeight - ADORNMENT_SIZE) / 2;\n\n  const leftAffixTopPosition = leftLayout.height\n    ? calculateFlatAffixTopPosition({\n        height: flatHeight,\n        ...paddingFlat,\n        affixHeight: leftLayout.height,\n      })\n    : null;\n\n  const rightAffixTopPosition = rightLayout.height\n    ? calculateFlatAffixTopPosition({\n        height: flatHeight,\n        ...paddingFlat,\n        affixHeight: rightLayout.height,\n      })\n    : null;\n\n  const labelProps = {\n    label,\n    onLayoutAnimatedText,\n    placeholderOpacity,\n    error,\n    placeholderStyle: styles.placeholder,\n    baseLabelTranslateY,\n    baseLabelTranslateX,\n    font,\n    fontSize,\n    fontWeight,\n    labelScale,\n    wiggleOffsetX: LABEL_WIGGLE_X_OFFSET,\n    topPosition,\n    paddingOffset: isAndroid\n      ? {\n          paddingLeft: I18nManager.isRTL ? paddingRight : paddingLeft,\n          paddingRight: I18nManager.isRTL ? paddingLeft : paddingRight,\n        }\n      : { paddingRight, paddingLeft },\n    hasActiveOutline,\n    activeColor,\n    placeholderColor,\n    errorColor,\n    roundness,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n    testID,\n  };\n  const affixTopPosition = {\n    [AdornmentSide.Left]: leftAffixTopPosition,\n    [AdornmentSide.Right]: rightAffixTopPosition,\n  };\n  const onAffixChange = {\n    [AdornmentSide.Left]: onLeftAffixLayoutChange,\n    [AdornmentSide.Right]: onRightAffixLayoutChange,\n  };\n\n  let adornmentProps: TextInputAdornmentProps = {\n    paddingHorizontal,\n    adornmentConfig,\n    forceFocus,\n    topPosition: {\n      [AdornmentType.Affix]: affixTopPosition,\n      [AdornmentType.Icon]: iconTopPosition,\n    },\n    onAffixChange,\n    isTextInputFocused: parentState.focused,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n  };\n  if (adornmentConfig.length) {\n    adornmentProps = {\n      ...adornmentProps,\n      left,\n      right,\n      textStyle: { ...font, fontSize, fontWeight },\n      visible: parentState.labeled,\n    };\n  }\n\n  return (\n    <View style={[containerStyle, viewStyle]}>\n      <Underline\n        hasActiveOutline={hasActiveOutline}\n        parentState={parentState}\n        underlineColorCustom={underlineColorCustom}\n        error={error}\n        colors={colors}\n        activeColor={activeColor}\n      />\n      <View\n        style={[\n          styles.labelContainer,\n          {\n            minHeight,\n          },\n        ]}\n      >\n        {!isAndroid && multiline && !!label && (\n          // Workaround for: https://github.com/callstack/react-native-paper/issues/2799\n          // Patch for a multiline TextInput with fixed height, which allow to avoid covering input label with its value.\n          <View\n            testID=\"patch-container\"\n            pointerEvents=\"none\"\n            style={[\n              StyleSheet.absoluteFill,\n              dense ? styles.densePatchContainer : styles.patchContainer,\n              {\n                backgroundColor:\n                  viewStyle.backgroundColor || containerStyle.backgroundColor,\n                left: paddingLeft,\n                right: paddingRight,\n              },\n            ]}\n          />\n        )}\n        <InputLabel parentState={parentState} labelProps={labelProps} />\n        {render?.({\n          testID: `${testID}-flat`,\n          ...rest,\n          ref: innerRef,\n          onChangeText,\n          placeholder: label ? parentState.placeholder : rest.placeholder,\n          placeholderTextColor: placeholderTextColor ?? placeholderColor,\n          editable: !disabled && editable,\n          selectionColor:\n            typeof selectionColor === 'undefined'\n              ? activeColor\n              : selectionColor,\n          onFocus,\n          onBlur,\n          underlineColorAndroid: 'transparent',\n          multiline,\n          style: [\n            styles.input,\n            { paddingLeft, paddingRight },\n            !multiline || (multiline && height) ? { height: flatHeight } : {},\n            paddingFlat,\n            {\n              ...font,\n              fontSize,\n              fontWeight,\n              color: inputTextColor,\n              textAlignVertical: multiline ? 'top' : 'center',\n              textAlign: textAlign\n                ? textAlign\n                : I18nManager.isRTL\n                ? 'right'\n                : 'left',\n            },\n            Platform.OS === 'web' && { outline: 'none' },\n            adornmentStyleAdjustmentForNativeInput,\n          ],\n        })}\n      </View>\n      <TextInputAdornment {...adornmentProps} />\n    </View>\n  );\n};\n\nexport default TextInputFlat;\n\ntype UnderlineProps = {\n  parentState: {\n    focused: boolean;\n  };\n  error?: boolean;\n  colors?: {\n    error?: string;\n  };\n  activeColor: string;\n  underlineColorCustom?: string;\n  hasActiveOutline?: boolean;\n};\n\nconst Underline = ({\n  parentState,\n  error,\n  colors,\n  activeColor,\n  underlineColorCustom,\n  hasActiveOutline,\n}: UnderlineProps) => {\n  const { isV3 } = useTheme();\n\n  let backgroundColor = parentState.focused\n    ? activeColor\n    : underlineColorCustom;\n\n  if (error) backgroundColor = colors?.error;\n\n  const activeScale = isV3 ? 2 : 1;\n\n  return (\n    <Animated.View\n      style={[\n        styles.underline,\n        isV3 && styles.md3Underline,\n        {\n          backgroundColor,\n          // Underlines is thinner when input is not focused\n          transform: [\n            {\n              scaleY: (isV3 ? hasActiveOutline : parentState.focused)\n                ? activeScale\n                : 0.5,\n            },\n          ],\n        },\n      ]}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  placeholder: {\n    position: 'absolute',\n    left: 0,\n  },\n  underline: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0,\n    height: 2,\n    zIndex: 1,\n  },\n  md3Underline: {\n    height: 1,\n  },\n  labelContainer: {\n    paddingTop: 0,\n    paddingBottom: 0,\n  },\n  input: {\n    flexGrow: 1,\n    margin: 0,\n  },\n  inputFlat: {\n    paddingTop: 24,\n    paddingBottom: 4,\n  },\n  inputFlatDense: {\n    paddingTop: 22,\n    paddingBottom: 2,\n  },\n  patchContainer: {\n    height: 24,\n    zIndex: 2,\n  },\n  densePatchContainer: {\n    height: 22,\n    zIndex: 2,\n  },\n});\n"]}
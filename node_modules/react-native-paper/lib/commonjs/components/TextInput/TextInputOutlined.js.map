{"version":3,"sources":["TextInputOutlined.tsx"],"names":["TextInputOutlined","disabled","editable","label","error","selectionColor","underlineColor","_underlineColor","outlineColor","customOutlineColor","activeOutlineColor","dense","style","theme","render","props","multiline","parentState","innerRef","onFocus","forceFocus","onBlur","onChangeText","onLayoutAnimatedText","onLeftAffixLayoutChange","onRightAffixLayoutChange","left","right","placeholderTextColor","testID","rest","adornmentConfig","colors","isV3","roundness","font","fonts","regular","hasActiveOutline","focused","INPUT_PADDING_HORIZONTAL","MIN_HEIGHT","ADORNMENT_OFFSET","fontSize","fontSizeStyle","fontWeight","lineHeight","height","backgroundColor","background","textAlign","viewStyle","StyleSheet","flatten","MAXIMIZED_LABEL_FONT_SIZE","inputTextColor","activeColor","placeholderColor","errorColor","labelScale","MINIMIZED_LABEL_FONT_SIZE","fontScale","labelWidth","labelLayout","width","labelHeight","labelHalfWidth","labelHalfHeight","baseLabelTranslateX","I18nManager","isRTL","labelTranslationXOffset","isAdornmentLeftIcon","some","side","type","AdornmentSide","Left","AdornmentType","Icon","ADORNMENT_SIZE","minInputHeight","MIN_DENSE_HEIGHT_OUTLINED","LABEL_PADDING_TOP","inputHeight","topPosition","console","warn","paddingSettings","offset","scale","isAndroid","Platform","OS","styles","inputOutlinedDense","inputOutlined","pad","paddingOut","baseLabelTranslateY","OUTLINE_MINIMIZED_LABEL_Y_OFFSET","placeholderOpacity","labeled","measured","placeholderStyle","position","paddingHorizontal","labelProps","wiggleOffsetX","LABEL_WIGGLE_X_OFFSET","maxFontSizeMultiplier","minHeight","leftLayout","rightLayout","leftAffixTopPosition","affixHeight","labelYOffset","rightAffixTopPosition","iconTopPosition","rightAffixWidth","leftAffixWidth","adornmentStyleAdjustmentForNativeInput","mode","affixTopPosition","Right","onAffixChange","adornmentProps","Affix","isTextInputFocused","length","textStyle","visible","labelContainer","paddingTop","LabelBackground","ref","placeholder","underlineColorAndroid","input","color","textAlignVertical","outline","Outline","borderRadius","borderWidth","borderColor","create","top","bottom","paddingBottom","flexGrow","margin","zIndex"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  View,\n  TextInput as NativeTextInput,\n  StyleSheet,\n  I18nManager,\n  Platform,\n  TextStyle,\n  ColorValue,\n} from 'react-native';\nimport TextInputAdornment, {\n  getAdornmentConfig,\n  getAdornmentStyleAdjustmentForNativeInput,\n  TextInputAdornmentProps,\n} from './Adornment/TextInputAdornment';\n\nimport InputLabel from './Label/InputLabel';\nimport LabelBackground from './Label/LabelBackground';\nimport type { RenderProps, ChildTextInputProps } from './types';\n\nimport {\n  MAXIMIZED_LABEL_FONT_SIZE,\n  MINIMIZED_LABEL_FONT_SIZE,\n  LABEL_WIGGLE_X_OFFSET,\n  ADORNMENT_SIZE,\n  OUTLINE_MINIMIZED_LABEL_Y_OFFSET,\n  LABEL_PADDING_TOP,\n  MIN_DENSE_HEIGHT_OUTLINED,\n} from './constants';\n\nimport {\n  calculateLabelTopPosition,\n  calculateInputHeight,\n  calculatePadding,\n  adjustPaddingOut,\n  Padding,\n  interpolatePlaceholder,\n  calculateOutlinedIconAndAffixTopPosition,\n  getOutlinedInputColors,\n  getConstants,\n} from './helpers';\nimport { AdornmentType, AdornmentSide } from './Adornment/enums';\n\nconst TextInputOutlined = ({\n  disabled = false,\n  editable = true,\n  label,\n  error = false,\n  selectionColor,\n  underlineColor: _underlineColor,\n  outlineColor: customOutlineColor,\n  activeOutlineColor,\n  dense,\n  style,\n  theme,\n  render = (props: RenderProps) => <NativeTextInput {...props} />,\n  multiline = false,\n  parentState,\n  innerRef,\n  onFocus,\n  forceFocus,\n  onBlur,\n  onChangeText,\n  onLayoutAnimatedText,\n  onLeftAffixLayoutChange,\n  onRightAffixLayoutChange,\n  left,\n  right,\n  placeholderTextColor,\n  testID = 'text-input',\n  ...rest\n}: ChildTextInputProps) => {\n  const adornmentConfig = getAdornmentConfig({ left, right });\n\n  const { colors, isV3, roundness } = theme;\n  const font = !isV3 ? theme.fonts.regular : {};\n  const hasActiveOutline = parentState.focused || error;\n\n  const { INPUT_PADDING_HORIZONTAL, MIN_HEIGHT, ADORNMENT_OFFSET } =\n    getConstants(isV3);\n\n  const {\n    fontSize: fontSizeStyle,\n    fontWeight,\n    lineHeight,\n    height,\n    backgroundColor = colors?.background,\n    textAlign,\n    ...viewStyle\n  } = (StyleSheet.flatten(style) || {}) as TextStyle;\n  const fontSize = fontSizeStyle || MAXIMIZED_LABEL_FONT_SIZE;\n\n  const {\n    inputTextColor,\n    activeColor,\n    outlineColor,\n    placeholderColor,\n    errorColor,\n  } = getOutlinedInputColors({\n    activeOutlineColor,\n    customOutlineColor,\n    disabled,\n    error,\n    theme,\n  });\n\n  const labelScale = MINIMIZED_LABEL_FONT_SIZE / fontSize;\n  const fontScale = MAXIMIZED_LABEL_FONT_SIZE / fontSize;\n\n  const labelWidth = parentState.labelLayout.width;\n  const labelHeight = parentState.labelLayout.height;\n  const labelHalfWidth = labelWidth / 2;\n  const labelHalfHeight = labelHeight / 2;\n\n  const baseLabelTranslateX =\n    (I18nManager.isRTL ? 1 : -1) *\n    (labelHalfWidth -\n      (labelScale * labelWidth) / 2 -\n      (fontSize - MINIMIZED_LABEL_FONT_SIZE) * labelScale);\n\n  let labelTranslationXOffset = 0;\n  const isAdornmentLeftIcon = adornmentConfig.some(\n    ({ side, type }) =>\n      side === AdornmentSide.Left && type === AdornmentType.Icon\n  );\n  if (isAdornmentLeftIcon) {\n    labelTranslationXOffset =\n      (I18nManager.isRTL ? -1 : 1) *\n      (ADORNMENT_SIZE + ADORNMENT_OFFSET - (isV3 ? 0 : 8));\n  }\n\n  const minInputHeight =\n    (dense ? MIN_DENSE_HEIGHT_OUTLINED : MIN_HEIGHT) - LABEL_PADDING_TOP;\n\n  const inputHeight = calculateInputHeight(labelHeight, height, minInputHeight);\n\n  const topPosition = calculateLabelTopPosition(\n    labelHeight,\n    inputHeight,\n    LABEL_PADDING_TOP\n  );\n\n  if (height && typeof height !== 'number') {\n    // eslint-disable-next-line\n    console.warn('Currently we support only numbers in height prop');\n  }\n\n  const paddingSettings = {\n    height: height ? +height : null,\n    labelHalfHeight,\n    offset: LABEL_PADDING_TOP,\n    multiline: multiline ? multiline : null,\n    dense: dense ? dense : null,\n    topPosition,\n    fontSize,\n    lineHeight,\n    label,\n    scale: fontScale,\n    isAndroid: Platform.OS === 'android',\n    styles: StyleSheet.flatten(\n      dense ? styles.inputOutlinedDense : styles.inputOutlined\n    ) as Padding,\n  };\n\n  const pad = calculatePadding(paddingSettings);\n\n  const paddingOut = adjustPaddingOut({ ...paddingSettings, pad });\n\n  const baseLabelTranslateY =\n    -labelHalfHeight - (topPosition + OUTLINE_MINIMIZED_LABEL_Y_OFFSET);\n\n  const placeholderOpacity = hasActiveOutline\n    ? interpolatePlaceholder(parentState.labeled, hasActiveOutline)\n    : parentState.labelLayout.measured\n    ? 1\n    : 0;\n\n  const placeholderStyle = {\n    position: 'absolute',\n    left: 0,\n    paddingHorizontal: INPUT_PADDING_HORIZONTAL,\n  };\n\n  const labelProps = {\n    label,\n    onLayoutAnimatedText,\n    placeholderOpacity,\n    error,\n    placeholderStyle,\n    baseLabelTranslateY,\n    baseLabelTranslateX,\n    font,\n    fontSize,\n    fontWeight,\n    labelScale,\n    wiggleOffsetX: LABEL_WIGGLE_X_OFFSET,\n    topPosition,\n    hasActiveOutline,\n    activeColor,\n    placeholderColor,\n    backgroundColor: backgroundColor as ColorValue,\n    errorColor,\n    labelTranslationXOffset,\n    roundness,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n    testID,\n  };\n\n  const minHeight = (height ||\n    (dense ? MIN_DENSE_HEIGHT_OUTLINED : MIN_HEIGHT)) as number;\n\n  const { leftLayout, rightLayout } = parentState;\n\n  const leftAffixTopPosition = calculateOutlinedIconAndAffixTopPosition({\n    height: minHeight,\n    affixHeight: leftLayout.height || 0,\n    labelYOffset: -OUTLINE_MINIMIZED_LABEL_Y_OFFSET,\n  });\n\n  const rightAffixTopPosition = calculateOutlinedIconAndAffixTopPosition({\n    height: minHeight,\n    affixHeight: rightLayout.height || 0,\n    labelYOffset: -OUTLINE_MINIMIZED_LABEL_Y_OFFSET,\n  });\n  const iconTopPosition = calculateOutlinedIconAndAffixTopPosition({\n    height: minHeight,\n    affixHeight: ADORNMENT_SIZE,\n    labelYOffset: -OUTLINE_MINIMIZED_LABEL_Y_OFFSET,\n  });\n\n  const rightAffixWidth = right\n    ? rightLayout.width || ADORNMENT_SIZE\n    : ADORNMENT_SIZE;\n\n  const leftAffixWidth = left\n    ? leftLayout.width || ADORNMENT_SIZE\n    : ADORNMENT_SIZE;\n\n  const adornmentStyleAdjustmentForNativeInput =\n    getAdornmentStyleAdjustmentForNativeInput({\n      adornmentConfig,\n      rightAffixWidth,\n      leftAffixWidth,\n      mode: 'outlined',\n      isV3,\n    });\n  const affixTopPosition = {\n    [AdornmentSide.Left]: leftAffixTopPosition,\n    [AdornmentSide.Right]: rightAffixTopPosition,\n  };\n  const onAffixChange = {\n    [AdornmentSide.Left]: onLeftAffixLayoutChange,\n    [AdornmentSide.Right]: onRightAffixLayoutChange,\n  };\n\n  let adornmentProps: TextInputAdornmentProps = {\n    adornmentConfig,\n    forceFocus,\n    topPosition: {\n      [AdornmentType.Icon]: iconTopPosition,\n      [AdornmentType.Affix]: affixTopPosition,\n    },\n    onAffixChange,\n    isTextInputFocused: parentState.focused,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n  };\n  if (adornmentConfig.length) {\n    adornmentProps = {\n      ...adornmentProps,\n      left,\n      right,\n      textStyle: { ...font, fontSize, fontWeight },\n      visible: parentState.labeled,\n    };\n  }\n\n  return (\n    <View style={viewStyle}>\n      {/*\n          Render the outline separately from the container\n          This is so that the label can overlap the outline\n          Otherwise the border will cut off the label on Android\n          */}\n      <Outline\n        isV3={isV3}\n        roundness={roundness}\n        hasActiveOutline={hasActiveOutline}\n        focused={parentState.focused}\n        activeColor={activeColor}\n        outlineColor={outlineColor}\n        backgroundColor={backgroundColor}\n      />\n      <View>\n        <View\n          style={[\n            styles.labelContainer,\n            {\n              paddingTop: LABEL_PADDING_TOP,\n              minHeight,\n            },\n          ]}\n        >\n          <InputLabel\n            parentState={parentState}\n            labelProps={labelProps}\n            labelBackground={LabelBackground}\n            maxFontSizeMultiplier={rest.maxFontSizeMultiplier}\n          />\n          {render?.({\n            testID: `${testID}-outlined`,\n            ...rest,\n            ref: innerRef,\n            onChangeText,\n            placeholder: label ? parentState.placeholder : rest.placeholder,\n            placeholderTextColor: placeholderTextColor || placeholderColor,\n            editable: !disabled && editable,\n            selectionColor:\n              typeof selectionColor === 'undefined'\n                ? activeColor\n                : selectionColor,\n            onFocus,\n            onBlur,\n            underlineColorAndroid: 'transparent',\n            multiline,\n            style: [\n              styles.input,\n              !multiline || (multiline && height)\n                ? { height: inputHeight }\n                : {},\n              paddingOut,\n              {\n                ...font,\n                fontSize,\n                fontWeight,\n                color: inputTextColor,\n                textAlignVertical: multiline ? 'top' : 'center',\n                textAlign: textAlign\n                  ? textAlign\n                  : I18nManager.isRTL\n                  ? 'right'\n                  : 'left',\n                paddingHorizontal: INPUT_PADDING_HORIZONTAL,\n              },\n              Platform.OS === 'web' && { outline: 'none' },\n              adornmentStyleAdjustmentForNativeInput,\n            ],\n          } as RenderProps)}\n        </View>\n        <TextInputAdornment {...adornmentProps} />\n      </View>\n    </View>\n  );\n};\n\nexport default TextInputOutlined;\n\ntype OutlineProps = {\n  isV3: boolean;\n  activeColor: string;\n  backgroundColor: ColorValue;\n  hasActiveOutline?: boolean;\n  focused?: boolean;\n  outlineColor?: string;\n  roundness?: number;\n};\n\nconst Outline = ({\n  isV3,\n  activeColor,\n  backgroundColor,\n  hasActiveOutline,\n  focused,\n  outlineColor,\n  roundness,\n}: OutlineProps) => (\n  <View\n    testID=\"text-input-outline\"\n    pointerEvents=\"none\"\n    style={[\n      styles.outline,\n      // eslint-disable-next-line react-native/no-inline-styles\n      {\n        backgroundColor,\n        borderRadius: roundness,\n        borderWidth: (isV3 ? hasActiveOutline : focused) ? 2 : 1,\n        borderColor: hasActiveOutline ? activeColor : outlineColor,\n      },\n    ]}\n  />\n);\n\nconst styles = StyleSheet.create({\n  outline: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 6,\n    bottom: 0,\n  },\n  labelContainer: {\n    paddingBottom: 0,\n  },\n  input: {\n    flexGrow: 1,\n    margin: 0,\n    zIndex: 1,\n  },\n  inputOutlined: {\n    paddingTop: 8,\n    paddingBottom: 8,\n  },\n  inputOutlinedDense: {\n    paddingTop: 4,\n    paddingBottom: 4,\n  },\n});\n"]}
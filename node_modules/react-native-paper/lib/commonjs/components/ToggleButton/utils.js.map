{"version":3,"sources":["utils.ts"],"names":["getToggleButtonColor","theme","checked","isV3","colors","onSecondaryContainer","alpha","tokens","md","ref","opacity","level2","rgb","string","dark"],"mappings":";;;;;;;AAAA;;AACA;;;;AAGO,MAAMA,oBAAoB,GAAG,QAM9B;AAAA,MAN+B;AACnCC,IAAAA,KADmC;AAEnCC,IAAAA;AAFmC,GAM/B;;AACJ,MAAIA,OAAJ,EAAa;AACX,QAAID,KAAK,CAACE,IAAV,EAAgB;AACd,aAAO,oBAAMF,KAAK,CAACG,MAAN,CAAaC,oBAAnB,EACJC,KADI,CACEC,eAAOC,EAAP,CAAUC,GAAV,CAAcC,OAAd,CAAsBC,MADxB,EAEJC,GAFI,GAGJC,MAHI,EAAP;AAID;;AACD,QAAIZ,KAAK,CAACa,IAAV,EAAgB;AACd,aAAO,0BAAP;AACD;;AACD,WAAO,oBAAP;AACD;;AACD,SAAO,aAAP;AACD,CApBM","sourcesContent":["import color from 'color';\nimport { tokens } from '../../styles/themes/v3/tokens';\nimport type { Theme } from '../../types';\n\nexport const getToggleButtonColor = ({\n  theme,\n  checked,\n}: {\n  theme: Theme;\n  checked: boolean | null;\n}) => {\n  if (checked) {\n    if (theme.isV3) {\n      return color(theme.colors.onSecondaryContainer)\n        .alpha(tokens.md.ref.opacity.level2)\n        .rgb()\n        .string();\n    }\n    if (theme.dark) {\n      return 'rgba(255, 255, 255, .12)';\n    }\n    return 'rgba(0, 0, 0, .08)';\n  }\n  return 'transparent';\n};\n"]}
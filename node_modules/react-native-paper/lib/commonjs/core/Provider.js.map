{"version":3,"sources":["Provider.tsx"],"names":["Provider","props","isOnlyVersionInTheme","theme","Object","keys","length","version","colorSchemeName","Appearance","getColorScheme","reduceMotionEnabled","setReduceMotionEnabled","React","useState","colorScheme","setColorScheme","handleAppearanceChange","preferences","useEffect","subscription","AccessibilityInfo","remove","appearanceSubscription","addChangeListener","removeChangeListener","getTheme","themeVersion","scheme","defaultThemeBase","defaultThemesByVersion","extendedThemeBase","animation","scale","isV3","children","settings","icon","MaterialCommunityIcon"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  AccessibilityInfo,\n  Appearance,\n  ColorSchemeName,\n  NativeEventSubscription,\n} from 'react-native';\nimport { defaultThemesByVersion, ThemeProvider } from './theming';\nimport { Provider as SettingsProvider, Settings } from './settings';\nimport MaterialCommunityIcon from '../components/MaterialCommunityIcon';\nimport PortalHost from '../components/Portal/PortalHost';\nimport { addEventListener } from '../utils/addEventListener';\nimport type { ThemeProp } from '../types';\n\nexport type Props = {\n  children: React.ReactNode;\n  theme?: ThemeProp;\n  settings?: Settings;\n};\n\nconst Provider = (props: Props) => {\n  const isOnlyVersionInTheme =\n    props.theme && Object.keys(props.theme).length === 1 && props.theme.version;\n\n  const colorSchemeName =\n    ((!props.theme || isOnlyVersionInTheme) && Appearance?.getColorScheme()) ||\n    'light';\n\n  const [reduceMotionEnabled, setReduceMotionEnabled] =\n    React.useState<boolean>(false);\n  const [colorScheme, setColorScheme] =\n    React.useState<ColorSchemeName>(colorSchemeName);\n\n  const handleAppearanceChange = (\n    preferences: Appearance.AppearancePreferences\n  ) => {\n    const { colorScheme } = preferences;\n    setColorScheme(colorScheme);\n  };\n\n  React.useEffect(() => {\n    let subscription: NativeEventSubscription | undefined;\n\n    if (!props.theme) {\n      subscription = addEventListener(\n        AccessibilityInfo,\n        'reduceMotionChanged',\n        setReduceMotionEnabled\n      );\n    }\n    return () => {\n      if (!props.theme) {\n        subscription?.remove();\n      }\n    };\n  }, [props.theme]);\n\n  React.useEffect(() => {\n    let appearanceSubscription: NativeEventSubscription | undefined;\n    if (!props.theme || isOnlyVersionInTheme) {\n      appearanceSubscription = Appearance?.addChangeListener(\n        handleAppearanceChange\n      ) as NativeEventSubscription | undefined;\n    }\n    return () => {\n      if (!props.theme || isOnlyVersionInTheme) {\n        if (appearanceSubscription) {\n          appearanceSubscription.remove();\n        } else {\n          Appearance?.removeChangeListener(handleAppearanceChange);\n        }\n      }\n    };\n  }, [props.theme, isOnlyVersionInTheme]);\n\n  const getTheme = () => {\n    const themeVersion = props.theme?.version || 3;\n    const scheme = colorScheme || 'light';\n    const defaultThemeBase = defaultThemesByVersion[themeVersion][scheme];\n\n    const extendedThemeBase = {\n      ...defaultThemeBase,\n      ...props.theme,\n      version: themeVersion,\n      animation: {\n        scale: reduceMotionEnabled ? 0 : 1,\n      },\n    };\n\n    return {\n      ...extendedThemeBase,\n      isV3: extendedThemeBase.version === 3,\n    } as ReactNativePaper.Theme;\n  };\n\n  const { children, settings } = props;\n\n  return (\n    <PortalHost>\n      <SettingsProvider value={settings || { icon: MaterialCommunityIcon }}>\n        <ThemeProvider theme={getTheme()}>{children}</ThemeProvider>\n      </SettingsProvider>\n    </PortalHost>\n  );\n};\n\nexport default Provider;\n"]}
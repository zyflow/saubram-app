{"version":3,"sources":["Appbar.tsx"],"names":["React","View","Platform","StyleSheet","color","AppbarContent","AppbarAction","AppbarBackAction","Surface","withTheme","getAppbarColor","renderAppbarContent","DEFAULT_APPBAR_HEIGHT","modeAppbarHeight","AppbarHeader","Appbar","children","dark","style","theme","mode","elevated","safeAreaInsets","rest","isV3","backgroundColor","customBackground","elevation","restStyle","flatten","isDark","isMode","modeToCompare","isLight","isV3CenterAlignedMode","shouldCenterContent","shouldAddLeftSpacing","shouldAddRightSpacing","OS","hasAppbarContent","leftItemsCount","rightItemsCount","Children","forEach","child","isValidElement","type","filterAppbarActions","useCallback","isLeading","toArray","filter","props","spacingStyle","styles","v3Spacing","spacing","insets","paddingBottom","bottom","paddingTop","top","paddingLeft","left","paddingRight","right","appbar","height","columnContainer","centerAlignedContainer","controlsRow","renderOnly","rightActionControls","renderExcept","create","flexDirection","alignItems","paddingHorizontal","width","flex","justifyContent","AppbarWithTheme"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { View, ViewStyle, Platform, StyleSheet, StyleProp } from 'react-native';\nimport color from 'color';\n\nimport AppbarContent from './AppbarContent';\nimport AppbarAction from './AppbarAction';\nimport AppbarBackAction from './AppbarBackAction';\nimport Surface from '../Surface';\nimport { withTheme } from '../../core/theming';\nimport type { MD3Elevation, Theme } from '../../types';\nimport {\n  getAppbarColor,\n  renderAppbarContent,\n  DEFAULT_APPBAR_HEIGHT,\n  modeAppbarHeight,\n  AppbarModes,\n} from './utils';\nimport AppbarHeader from './AppbarHeader';\n\nexport type Props = Partial<React.ComponentPropsWithRef<typeof View>> & {\n  /**\n   * Whether the background color is a dark color. A dark appbar will render light text and vice-versa.\n   */\n  dark?: boolean;\n  /**\n   * Content of the `Appbar`.\n   */\n  children: React.ReactNode;\n  /**\n   * @supported Available in v5.x with theme version 3\n   *\n   * Mode of the Appbar.\n   * - `small` - Appbar with default height (64).\n   * - `medium` - Appbar with medium height (112).\n   * - `large` - Appbar with large height (152).\n   * - `center-aligned` - Appbar with default height and center-aligned title.\n   */\n  mode?: 'small' | 'medium' | 'large' | 'center-aligned';\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Whether Appbar background should have the elevation along with primary color pigment.\n   */\n  elevated?: boolean;\n  /**\n   * @supported Available in v5.x\n   * Safe area insets for the Appbar. This can be used to avoid elements like the navigation bar on Android and bottom safe area on iOS.\n   */\n  safeAreaInsets?: {\n    bottom?: number;\n    top?: number;\n    left?: number;\n    right?: number;\n  };\n  /**\n   * @optional\n   */\n  theme: Theme;\n  style?: StyleProp<ViewStyle>;\n};\n\n/**\n * A component to display action items in a bar. It can be placed at the top or bottom.\n * The top bar usually contains the screen title, controls such as navigation buttons, menu button etc.\n * The bottom bar usually provides access to a drawer and up to four actions.\n *\n * <div class=\"screenshots\">\n *   <img class=\"small\" src=\"screenshots/appbar.png\" />\n * </div>\n *\n * ## Usage\n * ### Top bar\n * ```js\n * import * as React from 'react';\n * import { Appbar } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Appbar.Header>\n *     <Appbar.BackAction onPress={() => {}} />\n *     <Appbar.Content title=\"Title\" />\n *     <Appbar.Action icon=\"calendar\" onPress={() => {}} />\n *     <Appbar.Action icon=\"magnify\" onPress={() => {}} />\n *   </Appbar.Header>\n * );\n *\n * export default MyComponent;\n * ```\n *\n * ### Bottom bar\n * ```js\n * import * as React from 'react';\n * import { StyleSheet } from 'react-native';\n * import { Appbar, FAB, useTheme } from 'react-native-paper';\n * import { useSafeAreaInsets } from 'react-native-safe-area-context';\n *\n * const BOTTOM_APPBAR_HEIGHT = 80;\n * const MEDIUM_FAB_HEIGHT = 56;\n *\n * const MyComponent = () => {\n *   const { bottom } = useSafeAreaInsets();\n *   const theme = useTheme();\n *\n *   return (\n *     <Appbar\n *       style={[\n *         styles.bottom,\n *         {\n *           height: BOTTOM_APPBAR_HEIGHT + bottom,\n *           backgroundColor: theme.colors.elevation.level2,\n *         },\n *       ]}\n *       safeAreaInsets={{ bottom }}\n *     >\n *       <Appbar.Action icon=\"archive\" onPress={() => {}} />\n *       <Appbar.Action icon=\"email\" onPress={() => {}} />\n *       <Appbar.Action icon=\"label\" onPress={() => {}} />\n *       <Appbar.Action icon=\"delete\" onPress={() => {}} />\n *       <FAB\n *         mode=\"flat\"\n *         size=\"medium\"\n *         icon=\"plus\"\n *         onPress={() => {}}\n *         style={[\n *           styles.fab,\n *           { top: (BOTTOM_APPBAR_HEIGHT - MEDIUM_FAB_HEIGHT) / 2 },\n *         ]}\n *       />\n *     </Appbar>\n *   );\n * };\n *\n * const styles = StyleSheet.create({\n *   bottom: {\n *     backgroundColor: 'aquamarine',\n *     position: 'absolute',\n *     left: 0,\n *     right: 0,\n *     bottom: 0,\n *   },\n *   fab: {\n *     position: 'absolute',\n *     right: 16,\n *   },\n * });\n *\n * export default MyComponent;\n * ```\n */\nconst Appbar = ({\n  children,\n  dark,\n  style,\n  theme,\n  mode = 'small',\n  elevated,\n  safeAreaInsets,\n  ...rest\n}: Props) => {\n  const { isV3 } = theme;\n  const {\n    backgroundColor: customBackground,\n    elevation = isV3 ? (elevated ? 2 : 0) : 4,\n    ...restStyle\n  }: ViewStyle = StyleSheet.flatten(style) || {};\n\n  let isDark: boolean;\n\n  const backgroundColor = getAppbarColor(\n    theme,\n    elevation,\n    customBackground,\n    elevated\n  );\n\n  const isMode = (modeToCompare: AppbarModes) => {\n    return isV3 && mode === modeToCompare;\n  };\n\n  if (typeof dark === 'boolean') {\n    isDark = dark;\n  } else {\n    isDark =\n      backgroundColor === 'transparent'\n        ? false\n        : typeof backgroundColor === 'string'\n        ? !color(backgroundColor).isLight()\n        : true;\n  }\n\n  const isV3CenterAlignedMode = isV3 && isMode('center-aligned');\n\n  let shouldCenterContent = false;\n  let shouldAddLeftSpacing = false;\n  let shouldAddRightSpacing = false;\n  if ((!isV3 && Platform.OS === 'ios') || isV3CenterAlignedMode) {\n    let hasAppbarContent = false;\n    let leftItemsCount = 0;\n    let rightItemsCount = 0;\n\n    React.Children.forEach(children, (child) => {\n      if (React.isValidElement(child)) {\n        if (child.type === AppbarContent) {\n          hasAppbarContent = true;\n        } else if (hasAppbarContent) {\n          rightItemsCount++;\n        } else {\n          leftItemsCount++;\n        }\n      }\n    });\n\n    shouldCenterContent =\n      hasAppbarContent &&\n      leftItemsCount < 2 &&\n      rightItemsCount < (isV3 ? 3 : 2);\n    shouldAddLeftSpacing = shouldCenterContent && leftItemsCount === 0;\n    shouldAddRightSpacing = shouldCenterContent && rightItemsCount === 0;\n  }\n\n  const filterAppbarActions = React.useCallback(\n    (isLeading = false) =>\n      React.Children.toArray(children).filter((child) =>\n        // @ts-expect-error: TypeScript complains about the type of type but it doesn't matter\n        isLeading ? child.props.isLeading : !child.props.isLeading\n      ),\n    [children]\n  );\n\n  const spacingStyle = isV3 ? styles.v3Spacing : styles.spacing;\n\n  const insets = {\n    paddingBottom: safeAreaInsets?.bottom,\n    paddingTop: safeAreaInsets?.top,\n    paddingLeft: safeAreaInsets?.left,\n    paddingRight: safeAreaInsets?.right,\n  };\n\n  return (\n    <Surface\n      style={[\n        { backgroundColor },\n        styles.appbar,\n        {\n          height: isV3 ? modeAppbarHeight[mode] : DEFAULT_APPBAR_HEIGHT,\n        },\n        insets,\n        restStyle,\n        !theme.isV3 && { elevation },\n      ]}\n      elevation={elevation as MD3Elevation}\n      {...rest}\n    >\n      {shouldAddLeftSpacing ? <View style={spacingStyle} /> : null}\n      {(!isV3 || isMode('small') || isMode('center-aligned')) &&\n        renderAppbarContent({\n          children,\n          isDark,\n          isV3,\n          shouldCenterContent: isV3CenterAlignedMode || shouldCenterContent,\n        })}\n      {(isMode('medium') || isMode('large')) && (\n        <View\n          style={[\n            styles.columnContainer,\n            isMode('center-aligned') && styles.centerAlignedContainer,\n          ]}\n        >\n          {/* Appbar top row with controls */}\n          <View style={styles.controlsRow}>\n            {/* Left side of row container, can contain AppbarBackAction or AppbarAction if it's leading icon  */}\n            {renderAppbarContent({\n              children,\n              isDark,\n              isV3,\n              renderOnly: [AppbarBackAction],\n              mode,\n            })}\n            {renderAppbarContent({\n              children: filterAppbarActions(true),\n              isDark,\n              isV3,\n              renderOnly: [AppbarAction],\n              mode,\n            })}\n            {/* Right side of row container, can contain other AppbarAction if they are not leading icons */}\n            <View style={styles.rightActionControls}>\n              {renderAppbarContent({\n                children: filterAppbarActions(false),\n                isDark,\n                isV3,\n                renderExcept: [\n                  Appbar,\n                  AppbarBackAction,\n                  AppbarContent,\n                  AppbarHeader,\n                ],\n                mode,\n              })}\n            </View>\n          </View>\n          {/* Middle of the row, can contain only AppbarContent */}\n          {renderAppbarContent({\n            children,\n            isDark,\n            isV3,\n            renderOnly: [AppbarContent],\n            mode,\n          })}\n        </View>\n      )}\n      {shouldAddRightSpacing ? <View style={spacingStyle} /> : null}\n    </Surface>\n  );\n};\n\nconst styles = StyleSheet.create({\n  appbar: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: 4,\n  },\n  spacing: {\n    width: 48,\n  },\n  v3Spacing: {\n    width: 52,\n  },\n  controlsRow: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  rightActionControls: {\n    flexDirection: 'row',\n    flex: 1,\n    justifyContent: 'flex-end',\n  },\n  columnContainer: {\n    flexDirection: 'column',\n    flex: 1,\n    paddingTop: 8,\n  },\n  centerAlignedContainer: {\n    paddingTop: 0,\n  },\n});\n\nexport default withTheme(Appbar);\n\n// @component-docs ignore-next-line\nconst AppbarWithTheme = withTheme(Appbar);\n// @component-docs ignore-next-line\nexport { AppbarWithTheme as Appbar };\n"]}
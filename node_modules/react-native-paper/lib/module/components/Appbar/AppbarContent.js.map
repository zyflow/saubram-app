{"version":3,"sources":["AppbarContent.tsx"],"names":["React","Platform","StyleSheet","TouchableWithoutFeedback","View","color","Text","withTheme","white","modeTextVariant","AppbarContent","titleColor","subtitle","subtitleStyle","onPress","style","titleRef","titleStyle","theme","title","mode","rest","isV3","colors","titleTextColor","onSurface","subtitleColor","alpha","rgb","string","modeContainerStyles","small","styles","v3DefaultContainer","medium","v3MediumContainer","large","v3LargeContainer","variant","container","typescale","OS","fonts","regular","displayName","create","flex","paddingHorizontal","justifyContent","paddingBottom","paddingTop","fontSize","AppbarContentWithTheme"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Platform,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport color from 'color';\n\nimport Text from '../Typography/Text';\n\nimport { withTheme } from '../../core/theming';\nimport { white } from '../../styles/themes/v2/colors';\n\nimport type { $RemoveChildren, MD3TypescaleKey, Theme } from '../../types';\nimport { modeTextVariant } from './utils';\n\nexport type Props = $RemoveChildren<typeof View> & {\n  /**\n   * Custom color for the text.\n   */\n  color?: string;\n  /**\n   * Text for the title.\n   */\n  title: React.ReactNode;\n  /**\n   * Style for the title.\n   */\n  titleStyle?: StyleProp<TextStyle>;\n  /**\n   * Reference for the title.\n   */\n  titleRef?: React.RefObject<Text>;\n  /**\n   * @deprecated Deprecated in v5.x\n   * Text for the subtitle.\n   */\n  subtitle?: React.ReactNode;\n  /**\n   * @deprecated Deprecated in v5.x\n   * Style for the subtitle.\n   */\n  subtitleStyle?: StyleProp<TextStyle>;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * @internal\n   */\n  mode?: 'small' | 'medium' | 'large' | 'center-aligned';\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\n/**\n * A component used to display a title and optional subtitle in an appbar.\n *\n * <div class=\"screenshots\">\n *   <img class=\"small\" src=\"screenshots/appbar-content.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Appbar } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *     <Appbar.Header>\n *        <Appbar.Content title=\"Title\" />\n *     </Appbar.Header>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst AppbarContent = ({\n  color: titleColor,\n  subtitle,\n  subtitleStyle,\n  onPress,\n  style,\n  titleRef,\n  titleStyle,\n  theme,\n  title,\n  mode = 'small',\n  ...rest\n}: Props) => {\n  const { isV3, colors } = theme;\n\n  const titleTextColor = titleColor\n    ? titleColor\n    : isV3\n    ? colors.onSurface\n    : white;\n\n  const subtitleColor = color(titleTextColor).alpha(0.7).rgb().string();\n\n  const modeContainerStyles = {\n    small: styles.v3DefaultContainer,\n    medium: styles.v3MediumContainer,\n    large: styles.v3LargeContainer,\n    'center-aligned': styles.v3DefaultContainer,\n  };\n\n  const variant = modeTextVariant[mode] as MD3TypescaleKey;\n\n  return (\n    <TouchableWithoutFeedback onPress={onPress} disabled={!onPress}>\n      <View\n        pointerEvents=\"box-none\"\n        style={[styles.container, isV3 && modeContainerStyles[mode], style]}\n        {...rest}\n      >\n        <Text\n          {...(isV3 && { variant })}\n          ref={titleRef}\n          style={[\n            {\n              color: titleTextColor,\n              ...(isV3\n                ? theme.typescale[variant]\n                : Platform.OS === 'ios'\n                ? theme.fonts.regular\n                : theme.fonts.medium),\n            },\n            !isV3 && styles.title,\n            titleStyle,\n          ]}\n          numberOfLines={1}\n          accessible\n          // @ts-ignore Type '\"heading\"' is not assignable to type ...\n          accessibilityRole={Platform.OS === 'web' ? 'heading' : 'header'}\n        >\n          {title}\n        </Text>\n        {!isV3 && subtitle ? (\n          <Text\n            style={[styles.subtitle, { color: subtitleColor }, subtitleStyle]}\n            numberOfLines={1}\n          >\n            {subtitle}\n          </Text>\n        ) : null}\n      </View>\n    </TouchableWithoutFeedback>\n  );\n};\n\nAppbarContent.displayName = 'Appbar.Content';\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingHorizontal: 12,\n  },\n  v3DefaultContainer: {\n    paddingHorizontal: 0,\n  },\n  v3MediumContainer: {\n    paddingHorizontal: 0,\n    justifyContent: 'flex-end',\n    paddingBottom: 24,\n  },\n  v3LargeContainer: {\n    paddingHorizontal: 0,\n    paddingTop: 36,\n    justifyContent: 'flex-end',\n    paddingBottom: 28,\n  },\n  title: {\n    fontSize: Platform.OS === 'ios' ? 17 : 20,\n  },\n  subtitle: {\n    fontSize: Platform.OS === 'ios' ? 11 : 14,\n  },\n});\n\nexport default withTheme(AppbarContent);\n\n// @component-docs ignore-next-line\nconst AppbarContentWithTheme = withTheme(AppbarContent);\n// @component-docs ignore-next-line\nexport { AppbarContentWithTheme as AppbarContent };\n"]}
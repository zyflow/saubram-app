{"version":3,"sources":["helpers.tsx"],"names":["color","black","white","getBorderColor","theme","isOutlined","disabled","selectedColor","backgroundColor","isSelectedColor","undefined","isV3","colors","onSurfaceVariant","alpha","rgb","string","outline","dark","getTextColor","onSurfaceDisabled","onSecondaryContainer","text","getDefaultBackgroundColor","surface","secondaryContainer","getBackgroundColor","customBackgroundColor","getSelectedBackgroundColor","showSelectedOverlay","mix","lighten","darken","getIconColor","getUnderlayColor","selectedBackgroundColor","textColor","fade","getChipColors","baseChipColorProps","borderColor","iconColor","underlayColor"],"mappings":"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","sourcesContent":["import color from 'color';\nimport type { Theme } from '../../types';\nimport { black, white } from '../../styles/themes/v2/colors';\nimport type { ColorValue } from 'react-native';\n\ntype BaseProps = {\n  theme: Theme;\n  isOutlined: boolean;\n  disabled?: boolean;\n};\n\nconst getBorderColor = ({\n  theme,\n  isOutlined,\n  disabled,\n  selectedColor,\n  backgroundColor,\n}: BaseProps & { backgroundColor: string; selectedColor?: string }) => {\n  const isSelectedColor = selectedColor !== undefined;\n\n  if (theme.isV3) {\n    if (disabled) {\n      return color(theme.colors.onSurfaceVariant).alpha(0.12).rgb().string();\n    }\n\n    if (isSelectedColor) {\n      return color(selectedColor).alpha(0.29).rgb().string();\n    }\n\n    return theme.colors.outline;\n  }\n\n  if (isOutlined) {\n    if (isSelectedColor) {\n      return color(selectedColor).alpha(0.29).rgb().string();\n    }\n\n    if (theme.dark) {\n      return color(white).alpha(0.29).rgb().string();\n    }\n\n    return color(black).alpha(0.29).rgb().string();\n  }\n\n  return backgroundColor;\n};\n\nconst getTextColor = ({\n  theme,\n  isOutlined,\n  disabled,\n  selectedColor,\n}: BaseProps & {\n  selectedColor?: string;\n}) => {\n  const isSelectedColor = selectedColor !== undefined;\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.onSurfaceDisabled;\n    }\n\n    if (isSelectedColor) {\n      return selectedColor;\n    }\n\n    if (isOutlined) {\n      return theme.colors.onSurfaceVariant;\n    }\n\n    return theme.colors.onSecondaryContainer;\n  }\n\n  if (disabled) {\n    return theme.colors.disabled;\n  }\n\n  if (isSelectedColor) {\n    return color(selectedColor).alpha(0.87).rgb().string();\n  }\n\n  return color(theme.colors.text).alpha(0.87).rgb().string();\n};\n\nconst getDefaultBackgroundColor = ({\n  theme,\n  isOutlined,\n}: Omit<BaseProps, 'disabled' | 'selectedColor'>) => {\n  if (theme.isV3) {\n    if (isOutlined) {\n      return theme.colors.surface;\n    }\n\n    return theme.colors.secondaryContainer;\n  }\n\n  if (isOutlined) {\n    return theme.colors?.surface;\n  }\n\n  if (theme.dark) {\n    return '#383838';\n  }\n\n  return '#ebebeb';\n};\n\nconst getBackgroundColor = ({\n  theme,\n  isOutlined,\n  disabled,\n  customBackgroundColor,\n}: BaseProps & {\n  customBackgroundColor?: ColorValue;\n}) => {\n  if (typeof customBackgroundColor === 'string') {\n    return customBackgroundColor;\n  }\n\n  if (theme.isV3) {\n    if (disabled) {\n      if (isOutlined) {\n        return 'transparent';\n      }\n      return color(theme.colors.onSurfaceVariant).alpha(0.12).rgb().string();\n    }\n  }\n\n  return getDefaultBackgroundColor({ theme, isOutlined });\n};\n\nconst getSelectedBackgroundColor = ({\n  theme,\n  isOutlined,\n  disabled,\n  customBackgroundColor,\n  showSelectedOverlay,\n}: BaseProps & {\n  customBackgroundColor?: ColorValue;\n  showSelectedOverlay?: boolean;\n}) => {\n  const backgroundColor = getBackgroundColor({\n    theme,\n    disabled,\n    isOutlined,\n    customBackgroundColor,\n  });\n\n  if (theme.isV3) {\n    if (isOutlined) {\n      if (showSelectedOverlay) {\n        return color(backgroundColor)\n          .mix(color(theme.colors.onSurfaceVariant), 0.12)\n          .rgb()\n          .string();\n      }\n      return color(backgroundColor)\n        .mix(color(theme.colors.onSurfaceVariant), 0)\n        .rgb()\n        .string();\n    }\n\n    if (showSelectedOverlay) {\n      return color(backgroundColor)\n        .mix(color(theme.colors.onSecondaryContainer), 0.12)\n        .rgb()\n        .string();\n    }\n\n    return color(backgroundColor)\n      .mix(color(theme.colors.onSecondaryContainer), 0)\n      .rgb()\n      .string();\n  }\n\n  if (theme.dark) {\n    if (isOutlined) {\n      return color(backgroundColor).lighten(0.2).rgb().string();\n    }\n    return color(backgroundColor).lighten(0.4).rgb().string();\n  }\n\n  if (isOutlined) {\n    return color(backgroundColor).darken(0.08).rgb().string();\n  }\n\n  return color(backgroundColor).darken(0.2).rgb().string();\n};\n\nconst getIconColor = ({\n  theme,\n  isOutlined,\n  disabled,\n  selectedColor,\n}: BaseProps & {\n  selectedColor?: string;\n}) => {\n  const isSelectedColor = selectedColor !== undefined;\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.onSurfaceDisabled;\n    }\n\n    if (isSelectedColor) {\n      return selectedColor;\n    }\n\n    if (isOutlined) {\n      return theme.colors.onSurfaceVariant;\n    }\n\n    return theme.colors.onSecondaryContainer;\n  }\n\n  if (disabled) {\n    return theme.colors.disabled;\n  }\n\n  if (isSelectedColor) {\n    return color(selectedColor).alpha(0.54).rgb().string();\n  }\n\n  return color(theme.colors.text).alpha(0.54).rgb().string();\n};\n\nconst getUnderlayColor = ({\n  theme,\n  isOutlined,\n  disabled,\n  selectedColor,\n  selectedBackgroundColor,\n}: BaseProps & { selectedBackgroundColor: string; selectedColor?: string }) => {\n  const isSelectedColor = selectedColor !== undefined;\n  const textColor = getTextColor({\n    theme,\n    disabled,\n    selectedColor,\n    isOutlined,\n  });\n\n  if (theme.isV3) {\n    if (isSelectedColor) {\n      return color(selectedColor).alpha(0.12).rgb().string();\n    }\n\n    return color(textColor).alpha(0.12).rgb().string();\n  }\n\n  if (isSelectedColor) {\n    return color(selectedColor).fade(0.5).rgb().string();\n  }\n\n  return selectedBackgroundColor;\n};\n\nexport const getChipColors = ({\n  isOutlined,\n  theme,\n  selectedColor,\n  showSelectedOverlay,\n  customBackgroundColor,\n  disabled,\n}: BaseProps & {\n  customBackgroundColor?: ColorValue;\n  disabled?: boolean;\n  showSelectedOverlay?: boolean;\n  selectedColor?: string;\n}) => {\n  const baseChipColorProps = { theme, isOutlined, disabled };\n\n  const backgroundColor = getBackgroundColor({\n    ...baseChipColorProps,\n    customBackgroundColor,\n  });\n\n  const selectedBackgroundColor = getSelectedBackgroundColor({\n    ...baseChipColorProps,\n    customBackgroundColor,\n    showSelectedOverlay,\n  });\n\n  return {\n    borderColor: getBorderColor({\n      ...baseChipColorProps,\n      selectedColor,\n      backgroundColor,\n    }),\n    textColor: getTextColor({\n      ...baseChipColorProps,\n      selectedColor,\n    }),\n    iconColor: getIconColor({\n      ...baseChipColorProps,\n      selectedColor,\n    }),\n    underlayColor: getUnderlayColor({\n      ...baseChipColorProps,\n      selectedColor,\n      selectedBackgroundColor,\n    }),\n    backgroundColor,\n    selectedBackgroundColor,\n  };\n};\n"]}
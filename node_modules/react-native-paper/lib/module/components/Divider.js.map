{"version":3,"sources":["Divider.tsx"],"names":["React","color","StyleSheet","View","withTheme","black","white","Divider","leftInset","horizontalInset","style","theme","bold","rest","dark","isDarkTheme","isV3","dividerColor","colors","surfaceVariant","alpha","rgb","string","height","hairlineWidth","backgroundColor","styles","create","marginLeft","marginRight"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,IAArB,QAAuD,cAAvD;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,KAAT,EAAgBC,KAAhB,QAA6B,4BAA7B;;AA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,OAAO,GAAG,QAOH;AAAA,MAPI;AACfC,IAAAA,SADe;AAEfC,IAAAA,eAAe,GAAG,KAFH;AAGfC,IAAAA,KAHe;AAIfC,IAAAA,KAJe;AAKfC,IAAAA,IAAI,GAAG,KALQ;AAMf,OAAGC;AANY,GAOJ;AACX,QAAM;AAAEC,IAAAA,IAAI,EAAEC,WAAR;AAAqBC,IAAAA;AAArB,MAA8BL,KAApC;AAEA,QAAMM,YAAY,GAAGD,IAAI,GACrBL,KAAK,CAACO,MAAN,CAAaC,cADQ,GAErBlB,KAAK,CAACc,WAAW,GAAGT,KAAH,GAAWD,KAAvB,CAAL,CACGe,KADH,CACS,IADT,EAEGC,GAFH,GAGGC,MAHH,EAFJ;AAOA,sBACE,oBAAC,IAAD,eACMT,IADN;AAEE,IAAA,KAAK,EAAE,CACL;AAAEU,MAAAA,MAAM,EAAErB,UAAU,CAACsB,aAArB;AAAoCC,MAAAA,eAAe,EAAER;AAArD,KADK,EAELT,SAAS,IAAIkB,MAAM,CAAClB,SAFf,EAGLQ,IAAI,IAAIP,eAAR,IAA2BiB,MAAM,CAACjB,eAH7B,EAILO,IAAI,IAAIJ,IAAR,IAAgBc,MAAM,CAACd,IAJlB,EAKLF,KALK;AAFT,KADF;AAYD,CA7BD;;AA+BA,MAAMgB,MAAM,GAAGxB,UAAU,CAACyB,MAAX,CAAkB;AAC/BnB,EAAAA,SAAS,EAAE;AACToB,IAAAA,UAAU,EAAE;AADH,GADoB;AAI/BnB,EAAAA,eAAe,EAAE;AACfmB,IAAAA,UAAU,EAAE,EADG;AAEfC,IAAAA,WAAW,EAAE;AAFE,GAJc;AAQ/BjB,EAAAA,IAAI,EAAE;AACJW,IAAAA,MAAM,EAAE;AADJ;AARyB,CAAlB,CAAf;AAaA,eAAenB,SAAS,CAACG,OAAD,CAAxB","sourcesContent":["import * as React from 'react';\nimport color from 'color';\nimport { StyleSheet, View, ViewStyle, StyleProp } from 'react-native';\nimport { withTheme } from '../core/theming';\nimport { black, white } from '../styles/themes/v2/colors';\nimport type { $RemoveChildren, Theme } from '../types';\n\nexport type Props = $RemoveChildren<typeof View> & {\n  /**\n   * @renamed Renamed from 'inset' to 'leftInset` in v5.x\n   * Whether divider has a left inset.\n   */\n  leftInset?: boolean;\n  /**\n   * @supported Available in v5.x with theme version 3\n   *  Whether divider has a horizontal inset on both sides.\n   */\n  horizontalInset?: boolean;\n  /**\n   * @supported Available in v5.x with theme version 3\n   *  Whether divider should be bolded.\n   */\n  bold?: boolean;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\n/**\n * A divider is a thin, lightweight separator that groups content in lists and page layouts.\n *\n * <div class=\"screenshots\">\n *  <figure>\n *    <img class=\"medium\" src=\"screenshots/divider.png\" />\n *  </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { Divider, Text } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <View>\n *     <Text>Lemon</Text>\n *     <Divider />\n *     <Text>Mango</Text>\n *     <Divider />\n *   </View>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst Divider = ({\n  leftInset,\n  horizontalInset = false,\n  style,\n  theme,\n  bold = false,\n  ...rest\n}: Props) => {\n  const { dark: isDarkTheme, isV3 } = theme;\n\n  const dividerColor = isV3\n    ? theme.colors.surfaceVariant\n    : color(isDarkTheme ? white : black)\n        .alpha(0.12)\n        .rgb()\n        .string();\n\n  return (\n    <View\n      {...rest}\n      style={[\n        { height: StyleSheet.hairlineWidth, backgroundColor: dividerColor },\n        leftInset && styles.leftInset,\n        isV3 && horizontalInset && styles.horizontalInset,\n        isV3 && bold && styles.bold,\n        style,\n      ]}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  leftInset: {\n    marginLeft: 72,\n  },\n  horizontalInset: {\n    marginLeft: 28,\n    marginRight: 28,\n  },\n  bold: {\n    height: 1,\n  },\n});\n\nexport default withTheme(Divider);\n"]}
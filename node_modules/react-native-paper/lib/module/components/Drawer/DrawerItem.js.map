{"version":3,"sources":["DrawerItem.tsx"],"names":["color","React","View","StyleSheet","Text","Icon","TouchableRipple","withTheme","DrawerItem","icon","label","active","theme","style","onPress","accessibilityLabel","right","rest","roundness","isV3","backgroundColor","colors","secondaryContainer","primary","alpha","rgb","string","contentColor","onSecondaryContainer","onSurfaceVariant","text","labelMargin","borderRadius","underlayColor","mix","toString","undefined","styles","container","v3Container","selected","wrapper","v3Wrapper","content","marginLeft","typescale","labelLarge","fonts","medium","displayName","create","marginHorizontal","marginVertical","justifyContent","height","marginRight","flexDirection","alignItems","padding","flex"],"mappings":"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","sourcesContent":["import color from 'color';\nimport * as React from 'react';\nimport { View, StyleSheet, StyleProp, ViewStyle } from 'react-native';\nimport Text from '../Typography/Text';\nimport Icon, { IconSource } from '../Icon';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport { withTheme } from '../../core/theming';\nimport type { Theme } from '../../types';\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * The label text of the item.\n   */\n  label: string;\n  /**\n   * Icon to display for the `DrawerItem`.\n   */\n  icon?: IconSource;\n  /**\n   * Whether to highlight the drawer item as active.\n   */\n  active?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Accessibility label for the button. This is read by the screen reader when the user taps the button.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Callback which returns a React element to display on the right side. For instance a Badge.\n   */\n  right?: (props: { color: string }) => React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\n/**\n * A component used to show an action item with an icon and a label in a navigation drawer.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/drawer-item.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Drawer } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *    <Drawer.Item\n *      style={{ backgroundColor: '#64ffda' }}\n *      icon=\"star\"\n *      label=\"First Item\"\n *    />\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst DrawerItem = ({\n  icon,\n  label,\n  active,\n  theme,\n  style,\n  onPress,\n  accessibilityLabel,\n  right,\n  ...rest\n}: Props) => {\n  const { roundness, isV3 } = theme;\n\n  const backgroundColor = active\n    ? isV3\n      ? theme.colors.secondaryContainer\n      : color(theme.colors.primary).alpha(0.12).rgb().string()\n    : 'transparent';\n  const contentColor = active\n    ? isV3\n      ? theme.colors.onSecondaryContainer\n      : theme.colors.primary\n    : isV3\n    ? theme.colors.onSurfaceVariant\n    : color(theme.colors.text).alpha(0.68).rgb().string();\n\n  const labelMargin = icon ? (isV3 ? 12 : 32) : 0;\n  const borderRadius = (isV3 ? 7 : 1) * roundness;\n  const underlayColor = isV3\n    ? color(backgroundColor)\n        .mix(color(theme.colors.onSecondaryContainer), 0.16)\n        .rgb()\n        .toString()\n    : undefined;\n\n  return (\n    <View {...rest}>\n      <TouchableRipple\n        borderless\n        delayPressIn={0}\n        onPress={onPress}\n        style={[\n          styles.container,\n          { backgroundColor, borderRadius },\n          isV3 && styles.v3Container,\n          style,\n        ]}\n        accessibilityRole=\"button\"\n        accessibilityState={{ selected: active }}\n        accessibilityLabel={accessibilityLabel}\n        underlayColor={underlayColor}\n      >\n        <View style={[styles.wrapper, isV3 && styles.v3Wrapper]}>\n          <View style={styles.content}>\n            {icon ? (\n              <Icon source={icon} size={24} color={contentColor} />\n            ) : null}\n            <Text\n              variant=\"labelLarge\"\n              selectable={false}\n              numberOfLines={1}\n              style={[\n                styles.label,\n                {\n                  color: contentColor,\n                  marginLeft: labelMargin,\n                  ...(isV3 ? theme.typescale.labelLarge : theme.fonts.medium),\n                },\n              ]}\n            >\n              {label}\n            </Text>\n          </View>\n\n          {right?.({ color: contentColor })}\n        </View>\n      </TouchableRipple>\n    </View>\n  );\n};\n\nDrawerItem.displayName = 'Drawer.Item';\n\nconst styles = StyleSheet.create({\n  container: {\n    marginHorizontal: 10,\n    marginVertical: 4,\n  },\n  v3Container: {\n    justifyContent: 'center',\n    height: 56,\n    marginLeft: 12,\n    marginRight: 12,\n    marginVertical: 0,\n  },\n  wrapper: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 8,\n  },\n  v3Wrapper: {\n    marginLeft: 16,\n    marginRight: 24,\n    padding: 0,\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  label: {\n    marginRight: 32,\n  },\n});\n\nexport default withTheme(DrawerItem);\n"]}
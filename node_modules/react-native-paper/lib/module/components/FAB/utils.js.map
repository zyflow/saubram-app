{"version":3,"sources":["utils.ts"],"names":["color","I18nManager","StyleSheet","white","black","getContrastingColor","getCombinedStyles","isAnimatedFromRight","isIconStatic","distance","animFAB","isRTL","defaultPositionStyles","left","right","undefined","combinedStyles","innerWrapper","iconWrapper","absoluteFill","animatedFromRight","animatedFromRightRTL","animatedFromLeft","animatedFromLeftRTL","transform","translateX","interpolate","inputRange","outputRange","Math","abs","getBackgroundColor","theme","isVariant","disabled","style","backgroundColor","flatten","isV3","colors","surfaceDisabled","primaryContainer","secondaryContainer","tertiaryContainer","elevation","level3","dark","alpha","rgb","string","accent","getForegroundColor","customColor","onSurfaceDisabled","onPrimaryContainer","onSecondaryContainer","onTertiaryContainer","primary","getFABColors","variant","variantToCompare","baseFABColorProps","foregroundColor","rippleColor","getLabelColor","onSurface","text","fade","getBackdropColor","customBackdropColor","background","backdrop","getStackedFABBackgroundColor","surface","getFABGroupColors","labelColor","backdropColor","stackedFABBackgroundColor","standardSize","height","width","borderRadius","smallSize","v3SmallSize","v3MediumSize","v3LargeSize","getCustomFabSize","customSize","roundness","getFabStyle","size","extended","paddingHorizontal","v3Extended","getExtendedFabDimensions","getExtendedFabStyle"],"mappings":"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","sourcesContent":["import color from 'color';\nimport {\n  Animated,\n  I18nManager,\n  StyleProp,\n  ViewStyle,\n  StyleSheet,\n} from 'react-native';\nimport type { Theme } from '../../types';\nimport { white, black } from '../../styles/themes/v2/colors';\nimport getContrastingColor from '../../utils/getContrastingColor';\n\ntype GetCombinedStylesProps = {\n  isAnimatedFromRight: boolean;\n  isIconStatic: boolean;\n  distance: number;\n  animFAB: Animated.Value;\n};\n\ntype CombinedStyles = {\n  innerWrapper: Animated.WithAnimatedValue<ViewStyle>;\n  iconWrapper: Animated.WithAnimatedValue<ViewStyle>;\n  absoluteFill: Animated.WithAnimatedValue<ViewStyle>;\n};\n\ntype Variant = 'primary' | 'secondary' | 'tertiary' | 'surface';\n\ntype BaseProps = {\n  isVariant: (variant: Variant) => boolean;\n  theme: Theme;\n  disabled?: boolean;\n};\n\nexport const getCombinedStyles = ({\n  isAnimatedFromRight,\n  isIconStatic,\n  distance,\n  animFAB,\n}: GetCombinedStylesProps): CombinedStyles => {\n  const { isRTL } = I18nManager;\n\n  const defaultPositionStyles = { left: -distance, right: undefined };\n\n  const combinedStyles: CombinedStyles = {\n    innerWrapper: {\n      ...defaultPositionStyles,\n    },\n    iconWrapper: {\n      ...defaultPositionStyles,\n    },\n    absoluteFill: {},\n  };\n\n  const animatedFromRight = isAnimatedFromRight && !isRTL;\n  const animatedFromRightRTL = isAnimatedFromRight && isRTL;\n  const animatedFromLeft = !isAnimatedFromRight && !isRTL;\n  const animatedFromLeftRTL = !isAnimatedFromRight && isRTL;\n\n  if (animatedFromRight) {\n    combinedStyles.innerWrapper.transform = [\n      {\n        translateX: animFAB.interpolate({\n          inputRange: [distance, 0],\n          outputRange: [distance, 0],\n        }),\n      },\n    ];\n    combinedStyles.iconWrapper.transform = [\n      {\n        translateX: isIconStatic ? 0 : animFAB,\n      },\n    ];\n    combinedStyles.absoluteFill.transform = [\n      {\n        translateX: animFAB.interpolate({\n          inputRange: [distance, 0],\n          outputRange: [Math.abs(distance) / 2, Math.abs(distance)],\n        }),\n      },\n    ];\n  } else if (animatedFromRightRTL) {\n    combinedStyles.iconWrapper.transform = [\n      {\n        translateX: isIconStatic\n          ? 0\n          : animFAB.interpolate({\n              inputRange: [distance, 0],\n              outputRange: [-distance, 0],\n            }),\n      },\n    ];\n    combinedStyles.innerWrapper.transform = [\n      {\n        translateX: animFAB.interpolate({\n          inputRange: [distance, 0],\n          outputRange: [-distance, 0],\n        }),\n      },\n    ];\n    combinedStyles.absoluteFill.transform = [\n      {\n        translateX: animFAB.interpolate({\n          inputRange: [distance, 0],\n          outputRange: [0, distance],\n        }),\n      },\n    ];\n  } else if (animatedFromLeft) {\n    combinedStyles.iconWrapper.transform = [\n      {\n        translateX: isIconStatic\n          ? distance\n          : animFAB.interpolate({\n              inputRange: [0, distance],\n              outputRange: [distance, distance * 2],\n            }),\n      },\n    ];\n    combinedStyles.innerWrapper.transform = [\n      {\n        translateX: animFAB,\n      },\n    ];\n    combinedStyles.absoluteFill.transform = [\n      {\n        translateX: animFAB.interpolate({\n          inputRange: [0, distance],\n          outputRange: [0, Math.abs(distance) / 2],\n        }),\n      },\n    ];\n  } else if (animatedFromLeftRTL) {\n    combinedStyles.iconWrapper.transform = [\n      {\n        translateX: isIconStatic\n          ? animFAB.interpolate({\n              inputRange: [0, distance],\n              outputRange: [-distance, -distance * 2],\n            })\n          : -distance,\n      },\n    ];\n    combinedStyles.innerWrapper.transform = [\n      {\n        translateX: animFAB.interpolate({\n          inputRange: [0, distance],\n          outputRange: [0, -distance],\n        }),\n      },\n    ];\n    combinedStyles.absoluteFill.transform = [\n      {\n        translateX: animFAB.interpolate({\n          inputRange: [0, distance],\n          outputRange: [0, -distance],\n        }),\n      },\n    ];\n  }\n\n  return combinedStyles;\n};\n\nconst getBackgroundColor = ({\n  theme,\n  isVariant,\n  disabled,\n  style,\n}: BaseProps & { style?: StyleProp<ViewStyle> }) => {\n  const { backgroundColor } = StyleSheet.flatten(style) || {};\n  if (backgroundColor && !disabled) {\n    return backgroundColor;\n  }\n\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.surfaceDisabled;\n    }\n\n    if (isVariant('primary')) {\n      return theme.colors.primaryContainer;\n    }\n\n    if (isVariant('secondary')) {\n      return theme.colors.secondaryContainer;\n    }\n\n    if (isVariant('tertiary')) {\n      return theme.colors.tertiaryContainer;\n    }\n\n    if (isVariant('surface')) {\n      return theme.colors.elevation.level3;\n    }\n  }\n\n  if (disabled) {\n    if (theme.dark) {\n      return color(white).alpha(0.12).rgb().string();\n    }\n    return color(black).alpha(0.12).rgb().string();\n  }\n\n  //@ts-ignore\n  return theme.colors?.accent;\n};\n\nconst getForegroundColor = ({\n  theme,\n  isVariant,\n  disabled,\n  backgroundColor,\n  customColor,\n}: BaseProps & { backgroundColor: string; customColor?: string }) => {\n  if (typeof customColor !== 'undefined' && !disabled) {\n    return customColor;\n  }\n\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.onSurfaceDisabled;\n    }\n\n    if (isVariant('primary')) {\n      return theme.colors.onPrimaryContainer;\n    }\n\n    if (isVariant('secondary')) {\n      return theme.colors.onSecondaryContainer;\n    }\n\n    if (isVariant('tertiary')) {\n      return theme.colors.onTertiaryContainer;\n    }\n\n    if (isVariant('surface')) {\n      return theme.colors.primary;\n    }\n  }\n\n  if (disabled) {\n    if (theme.dark) {\n      return color(white).alpha(0.32).rgb().string();\n    }\n    return color(black).alpha(0.32).rgb().string();\n  }\n\n  if (backgroundColor) {\n    return getContrastingColor(\n      backgroundColor || white,\n      white,\n      'rgba(0, 0, 0, .54)'\n    );\n  }\n\n  return getContrastingColor(white, white, 'rgba(0, 0, 0, .54)');\n};\n\nexport const getFABColors = ({\n  theme,\n  variant,\n  disabled,\n  customColor,\n  style,\n}: {\n  theme: Theme;\n  variant: string;\n  disabled?: boolean;\n  customColor?: string;\n  style?: StyleProp<ViewStyle>;\n}) => {\n  const isVariant = (variantToCompare: Variant) => {\n    return variant === variantToCompare;\n  };\n\n  const baseFABColorProps = { theme, isVariant, disabled };\n\n  const backgroundColor = getBackgroundColor({\n    ...baseFABColorProps,\n    style,\n  });\n\n  const foregroundColor = getForegroundColor({\n    ...baseFABColorProps,\n    customColor,\n    backgroundColor,\n  });\n\n  return {\n    backgroundColor,\n    foregroundColor,\n    rippleColor: color(foregroundColor).alpha(0.12).rgb().string(),\n  };\n};\n\nconst getLabelColor = ({ theme }: { theme: Theme }) => {\n  if (theme.isV3) {\n    return theme.colors.onSurface;\n  }\n\n  if (theme.dark) {\n    return theme.colors.text;\n  }\n\n  return color(theme.colors.text).fade(0.54).rgb().string();\n};\n\nconst getBackdropColor = ({\n  theme,\n  customBackdropColor,\n}: {\n  theme: Theme;\n  customBackdropColor?: string;\n}) => {\n  if (customBackdropColor) {\n    return customBackdropColor;\n  }\n  if (theme.isV3) {\n    return color(theme.colors.background).alpha(0.95).rgb().string();\n  }\n  return theme.colors?.backdrop;\n};\n\nconst getStackedFABBackgroundColor = ({ theme }: { theme: Theme }) => {\n  if (theme.isV3) {\n    return theme.colors.elevation.level3;\n  }\n  return theme.colors.surface;\n};\n\nexport const getFABGroupColors = ({\n  theme,\n  customBackdropColor,\n}: {\n  theme: Theme;\n  customBackdropColor?: string;\n}) => {\n  return {\n    labelColor: getLabelColor({ theme }),\n    backdropColor: getBackdropColor({ theme, customBackdropColor }),\n    stackedFABBackgroundColor: getStackedFABBackgroundColor({ theme }),\n  };\n};\n\nconst standardSize = {\n  height: 56,\n  width: 56,\n  borderRadius: 28,\n};\nconst smallSize = {\n  height: 40,\n  width: 40,\n  borderRadius: 28,\n};\nconst v3SmallSize = {\n  height: 40,\n  width: 40,\n};\nconst v3MediumSize = {\n  height: 56,\n  width: 56,\n};\nconst v3LargeSize = {\n  height: 96,\n  width: 96,\n};\n\nconst getCustomFabSize = (customSize: number, roundness: number) => ({\n  height: customSize,\n  width: customSize,\n  borderRadius: customSize / roundness,\n});\n\nexport const getFabStyle = ({\n  size,\n  theme,\n  customSize,\n}: {\n  customSize?: number;\n  size: 'small' | 'medium' | 'large';\n  theme: Theme;\n}) => {\n  const { isV3, roundness } = theme;\n\n  if (customSize) return getCustomFabSize(customSize, roundness);\n\n  if (isV3) {\n    switch (size) {\n      case 'small':\n        return { ...v3SmallSize, borderRadius: 3 * roundness };\n      case 'medium':\n        return { ...v3MediumSize, borderRadius: 4 * roundness };\n      case 'large':\n        return { ...v3LargeSize, borderRadius: 7 * roundness };\n    }\n  }\n\n  if (size === 'small') {\n    return smallSize;\n  }\n  return standardSize;\n};\n\nconst extended = {\n  height: 48,\n  paddingHorizontal: 16,\n};\n\nconst v3Extended = {\n  height: 56,\n  borderRadius: 16,\n  paddingHorizontal: 16,\n};\n\nconst getExtendedFabDimensions = (customSize: number) => ({\n  height: customSize,\n  paddingHorizontal: 16,\n});\n\nexport const getExtendedFabStyle = ({\n  customSize,\n  theme,\n}: {\n  customSize?: number;\n  theme: Theme;\n}) => {\n  if (customSize) return getExtendedFabDimensions(customSize);\n\n  const { isV3 } = theme;\n\n  return isV3 ? v3Extended : extended;\n};\n"]}
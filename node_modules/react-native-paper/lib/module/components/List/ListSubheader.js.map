{"version":3,"sources":["ListSubheader.tsx"],"names":["React","StyleSheet","color","Text","useTheme","ListSubheader","style","theme","overrideTheme","rest","textColor","isV3","colors","onSurfaceVariant","text","alpha","rgb","string","styles","container","typescale","bodyMedium","fonts","medium","displayName","create","paddingHorizontal","paddingVertical"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,QAAiD,cAAjD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,QAAT,QAAyB,oBAAzB;;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,aAAa,GAAG,QAAqD;AAAA,MAApD;AAAEC,IAAAA,KAAF;AAASC,IAAAA,KAAK,EAAEC,aAAhB;AAA+B,OAAGC;AAAlC,GAAoD;AACzE,QAAMF,KAAK,GAAGH,QAAQ,CAACI,aAAD,CAAtB;AAEA,QAAME,SAAS,GAAGH,KAAK,CAACI,IAAN,GACdJ,KAAK,CAACK,MAAN,CAAaC,gBADC,GAEdX,KAAK,CAACK,KAAK,CAACK,MAAN,CAAaE,IAAd,CAAL,CAAyBC,KAAzB,CAA+B,IAA/B,EAAqCC,GAArC,GAA2CC,MAA3C,EAFJ;AAIA,sBACE,oBAAC,IAAD;AACE,IAAA,OAAO,EAAC,YADV;AAEE,IAAA,aAAa,EAAE;AAFjB,KAGMR,IAHN;AAIE,IAAA,KAAK,EAAE,CACLS,MAAM,CAACC,SADF,EAEL;AACEjB,MAAAA,KAAK,EAAEQ,SADT;AAEE,UAAIH,KAAK,CAACI,IAAN,GAAaJ,KAAK,CAACa,SAAN,CAAgBC,UAA7B,GAA0Cd,KAAK,CAACe,KAAN,CAAYC,MAA1D;AAFF,KAFK,EAMLjB,KANK;AAJT,KADF;AAeD,CAtBD;;AAwBAD,aAAa,CAACmB,WAAd,GAA4B,gBAA5B;AAEA,MAAMN,MAAM,GAAGjB,UAAU,CAACwB,MAAX,CAAkB;AAC/BN,EAAAA,SAAS,EAAE;AACTO,IAAAA,iBAAiB,EAAE,EADV;AAETC,IAAAA,eAAe,EAAE;AAFR;AADoB,CAAlB,CAAf;AAOA,eAAetB,aAAf","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, StyleProp, TextStyle } from 'react-native';\nimport color from 'color';\nimport Text from '../Typography/Text';\nimport { useTheme } from '../../core/theming';\nimport type { Theme } from '../../types';\n\nexport type Props = React.ComponentProps<typeof Text> & {\n  /**\n   * @optional\n   */\n  theme?: Theme;\n  /**\n   * Style that is passed to Text element.\n   */\n  style?: StyleProp<TextStyle>;\n};\n\n/**\n * A component used to display a header in lists.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { List } from 'react-native-paper';\n *\n * const MyComponent = () => <List.Subheader>My List Title</List.Subheader>;\n *\n * export default MyComponent;\n * ```\n */\nconst ListSubheader = ({ style, theme: overrideTheme, ...rest }: Props) => {\n  const theme = useTheme(overrideTheme);\n\n  const textColor = theme.isV3\n    ? theme.colors.onSurfaceVariant\n    : color(theme.colors.text).alpha(0.54).rgb().string();\n\n  return (\n    <Text\n      variant=\"bodyMedium\"\n      numberOfLines={1}\n      {...rest}\n      style={[\n        styles.container,\n        {\n          color: textColor,\n          ...(theme.isV3 ? theme.typescale.bodyMedium : theme.fonts.medium),\n        },\n        style,\n      ]}\n    />\n  );\n};\n\nListSubheader.displayName = 'List.Subheader';\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 16,\n    paddingVertical: 13,\n  },\n});\n\nexport default ListSubheader;\n"]}
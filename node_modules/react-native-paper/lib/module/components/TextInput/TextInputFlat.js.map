{"version":3,"sources":["TextInputFlat.tsx"],"names":["React","View","Animated","TextInput","NativeTextInput","StyleSheet","I18nManager","Platform","InputLabel","TextInputAdornment","useTheme","MAXIMIZED_LABEL_FONT_SIZE","MINIMIZED_LABEL_FONT_SIZE","LABEL_WIGGLE_X_OFFSET","ADORNMENT_SIZE","MINIMIZED_LABEL_Y_OFFSET","LABEL_PADDING_TOP_DENSE","MIN_DENSE_HEIGHT_WL","MIN_DENSE_HEIGHT","calculateLabelTopPosition","calculateInputHeight","calculatePadding","adjustPaddingFlat","interpolatePlaceholder","calculateFlatAffixTopPosition","calculateFlatInputHorizontalPadding","getFlatInputColors","getConstants","getAdornmentConfig","getAdornmentStyleAdjustmentForNativeInput","AdornmentSide","AdornmentType","InputMode","TextInputFlat","disabled","editable","label","error","selectionColor","underlineColor","activeUnderlineColor","dense","style","theme","render","props","multiline","parentState","innerRef","onFocus","forceFocus","onBlur","onChangeText","onLayoutAnimatedText","onLeftAffixLayoutChange","onRightAffixLayoutChange","left","right","placeholderTextColor","testID","rest","isAndroid","OS","colors","isV3","roundness","font","fonts","regular","hasActiveOutline","focused","LABEL_PADDING_TOP","FLAT_INPUT_OFFSET","MIN_HEIGHT","fontSize","fontSizeStyle","fontWeight","height","paddingHorizontal","textAlign","viewStyle","flatten","isPaddingHorizontalPassed","undefined","adornmentConfig","paddingLeft","paddingRight","leftLayout","rightLayout","rightAffixWidth","width","leftAffixWidth","adornmentStyleAdjustmentForNativeInput","inputOffset","mode","Flat","inputTextColor","activeColor","underlineColorCustom","placeholderColor","errorColor","backgroundColor","containerStyle","borderTopLeftRadius","borderTopRightRadius","labelScale","fontScale","labelWidth","labelLayout","labelHeight","labelHalfWidth","labelHalfHeight","baseLabelTranslateX","isRTL","minInputHeight","inputHeight","topPosition","console","warn","paddingSettings","offset","scale","styles","inputFlatDense","inputFlat","pad","paddingFlat","baseLabelTranslateY","placeholderOpacity","labeled","measured","minHeight","flatHeight","iconTopPosition","leftAffixTopPosition","affixHeight","rightAffixTopPosition","labelProps","placeholderStyle","placeholder","wiggleOffsetX","paddingOffset","maxFontSizeMultiplier","affixTopPosition","Left","Right","onAffixChange","adornmentProps","Affix","Icon","isTextInputFocused","length","textStyle","visible","labelContainer","absoluteFill","densePatchContainer","patchContainer","ref","underlineColorAndroid","input","color","textAlignVertical","outline","Underline","activeScale","underline","md3Underline","transform","scaleY","create","position","bottom","zIndex","paddingTop","paddingBottom","flexGrow","margin"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SACEC,IADF,EAEEC,QAFF,EAGEC,SAAS,IAAIC,eAHf,EAIEC,UAJF,EAKEC,WALF,EAMEC,QANF,QAQO,cARP;AASA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,OAAOC,kBAAP,MAEO,gCAFP;AAIA,SAASC,QAAT,QAAyB,oBAAzB;AAEA,SACEC,yBADF,EAEEC,yBAFF,EAGEC,qBAHF,EAIEC,cAJF,EAKEC,wBALF,EAMEC,uBANF,EAOEC,mBAPF,EAQEC,gBARF,QASO,aATP;AAWA,SACEC,yBADF,EAEEC,oBAFF,EAGEC,gBAHF,EAIEC,iBAJF,EAMEC,sBANF,EAOEC,6BAPF,EAQEC,mCARF,EASEC,kBATF,EAUEC,YAVF,QAWO,WAXP;AAYA,SACEC,kBADF,EAEEC,yCAFF,QAGO,gCAHP;AAIA,SAASC,aAAT,EAAwBC,aAAxB,EAAuCC,SAAvC,QAAwD,mBAAxD;;AAEA,MAAMC,aAAa,GAAG,QA2BK;AAAA,MA3BJ;AACrBC,IAAAA,QAAQ,GAAG,KADU;AAErBC,IAAAA,QAAQ,GAAG,IAFU;AAGrBC,IAAAA,KAHqB;AAIrBC,IAAAA,KAAK,GAAG,KAJa;AAKrBC,IAAAA,cALqB;AAMrBC,IAAAA,cANqB;AAOrBC,IAAAA,oBAPqB;AAQrBC,IAAAA,KARqB;AASrBC,IAAAA,KATqB;AAUrBC,IAAAA,KAVqB;AAWrBC,IAAAA,MAAM,GAAIC,KAAD,iBAAwB,oBAAC,eAAD,EAAqBA,KAArB,CAXZ;AAYrBC,IAAAA,SAAS,GAAG,KAZS;AAarBC,IAAAA,WAbqB;AAcrBC,IAAAA,QAdqB;AAerBC,IAAAA,OAfqB;AAgBrBC,IAAAA,UAhBqB;AAiBrBC,IAAAA,MAjBqB;AAkBrBC,IAAAA,YAlBqB;AAmBrBC,IAAAA,oBAnBqB;AAoBrBC,IAAAA,uBApBqB;AAqBrBC,IAAAA,wBArBqB;AAsBrBC,IAAAA,IAtBqB;AAuBrBC,IAAAA,KAvBqB;AAwBrBC,IAAAA,oBAxBqB;AAyBrBC,IAAAA,MAAM,GAAG,YAzBY;AA0BrB,OAAGC;AA1BkB,GA2BI;AACzB,QAAMC,SAAS,GAAGtD,QAAQ,CAACuD,EAAT,KAAgB,SAAlC;AACA,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,IAAV;AAAgBC,IAAAA;AAAhB,MAA8BtB,KAApC;AACA,QAAMuB,IAAI,GAAG,CAACF,IAAD,GAAQrB,KAAK,CAACwB,KAAN,CAAYC,OAApB,GAA8B,EAA3C;AACA,QAAMC,gBAAgB,GAAGtB,WAAW,CAACuB,OAAZ,IAAuBjC,KAAhD;AAEA,QAAM;AAAEkC,IAAAA,iBAAF;AAAqBC,IAAAA,iBAArB;AAAwCC,IAAAA;AAAxC,MACJ9C,YAAY,CAACqC,IAAD,CADd;AAGA,QAAM;AACJU,IAAAA,QAAQ,EAAEC,aADN;AAEJC,IAAAA,UAFI;AAGJC,IAAAA,MAHI;AAIJC,IAAAA,iBAJI;AAKJC,IAAAA,SALI;AAMJ,OAAGC;AANC,MAOD3E,UAAU,CAAC4E,OAAX,CAAmBvC,KAAnB,KAA6B,EAPlC;AAQA,QAAMgC,QAAQ,GAAGC,aAAa,IAAIhE,yBAAlC;AAEA,QAAMuE,yBAAyB,GAC7BJ,iBAAiB,KAAKK,SAAtB,IAAmC,OAAOL,iBAAP,KAA6B,QADlE;AAGA,QAAMM,eAAe,GAAGxD,kBAAkB,CAAC;AACzC4B,IAAAA,IADyC;AAEzCC,IAAAA;AAFyC,GAAD,CAA1C;AAKA,MAAI;AAAE4B,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAAgC7D,mCAAmC,CAAC;AACtE2D,IAAAA,eADsE;AAEtEpB,IAAAA;AAFsE,GAAD,CAAvE;;AAKA,MAAIkB,yBAAJ,EAA+B;AAC7BG,IAAAA,WAAW,GAAGP,iBAAd;AACAQ,IAAAA,YAAY,GAAGR,iBAAf;AACD;;AAED,QAAM;AAAES,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAA8BzC,WAApC;AAEA,QAAM0C,eAAe,GAAGhC,KAAK,GACzB+B,WAAW,CAACE,KAAZ,IAAqB5E,cADI,GAEzBA,cAFJ;AAIA,QAAM6E,cAAc,GAAGnC,IAAI,GACvB+B,UAAU,CAACG,KAAX,IAAoB5E,cADG,GAEvBA,cAFJ;AAIA,QAAM8E,sCAAsC,GAC1C/D,yCAAyC,CAAC;AACxCuD,IAAAA,eADwC;AAExCK,IAAAA,eAFwC;AAGxCE,IAAAA,cAHwC;AAIxCb,IAAAA,iBAJwC;AAKxCe,IAAAA,WAAW,EAAErB,iBAL2B;AAMxCsB,IAAAA,IAAI,EAAE9D,SAAS,CAAC+D,IANwB;AAOxC/B,IAAAA;AAPwC,GAAD,CAD3C;AAWA,QAAM;AACJgC,IAAAA,cADI;AAEJC,IAAAA,WAFI;AAGJC,IAAAA,oBAHI;AAIJC,IAAAA,gBAJI;AAKJC,IAAAA,UALI;AAMJC,IAAAA;AANI,MAOF3E,kBAAkB,CAAC;AACrBa,IAAAA,cADqB;AAErBC,IAAAA,oBAFqB;AAGrBN,IAAAA,QAHqB;AAIrBG,IAAAA,KAJqB;AAKrBM,IAAAA;AALqB,GAAD,CAPtB;AAeA,QAAM2D,cAAc,GAAG;AACrBD,IAAAA,eADqB;AAErBE,IAAAA,mBAAmB,EAAE5D,KAAK,CAACsB,SAFN;AAGrBuC,IAAAA,oBAAoB,EAAE7D,KAAK,CAACsB;AAHP,GAAvB;AAMA,QAAMwC,UAAU,GAAG7F,yBAAyB,GAAG8D,QAA/C;AACA,QAAMgC,SAAS,GAAG/F,yBAAyB,GAAG+D,QAA9C;AAEA,QAAMiC,UAAU,GAAG5D,WAAW,CAAC6D,WAAZ,CAAwBlB,KAA3C;AACA,QAAMmB,WAAW,GAAG9D,WAAW,CAAC6D,WAAZ,CAAwB/B,MAA5C;AACA,QAAMiC,cAAc,GAAGH,UAAU,GAAG,CAApC;AACA,QAAMI,eAAe,GAAGF,WAAW,GAAG,CAAtC;AAEA,QAAMG,mBAAmB,GACvB,CAAC1G,WAAW,CAAC2G,KAAZ,GAAoB,CAApB,GAAwB,CAAC,CAA1B,KACGH,cAAc,GAAIL,UAAU,GAAGE,UAAd,GAA4B,CADhD,IAEA,CAAC,IAAIF,UAAL,KAAoBnG,WAAW,CAAC2G,KAAZ,GAAoB,CAAC,CAArB,GAAyB,CAA7C,IAAkD5B,WAHpD;AAKA,QAAM6B,cAAc,GAAGzE,KAAK,GACxB,CAACL,KAAK,GAAGnB,mBAAH,GAAyBC,gBAA/B,IAAmDF,uBAD3B,GAExByD,UAAU,GAAGF,iBAFjB;AAIA,QAAM4C,WAAW,GAAG/F,oBAAoB,CAACyF,WAAD,EAAchC,MAAd,EAAsBqC,cAAtB,CAAxC;AAEA,QAAME,WAAW,GAAGjG,yBAAyB,CAC3C0F,WAD2C,EAE3CM,WAF2C,EAG3CrE,SAAS,IAAI+B,MAAb,GAAsB,CAAtB,GAA0B,CAACA,MAAD,GAAUqC,cAAc,GAAG,CAA3B,GAA+B,CAHd,CAA7C;;AAMA,MAAIrC,MAAM,IAAI,OAAOA,MAAP,KAAkB,QAAhC,EAA0C;AACxC;AACAwC,IAAAA,OAAO,CAACC,IAAR,CAAa,kDAAb;AACD;;AAED,QAAMC,eAAe,GAAG;AACtB1C,IAAAA,MAAM,EAAEA,MAAM,GAAG,CAACA,MAAJ,GAAa,IADL;AAEtBkC,IAAAA,eAFsB;AAGtBS,IAAAA,MAAM,EAAEhD,iBAHc;AAItB1B,IAAAA,SAAS,EAAEA,SAAS,GAAGA,SAAH,GAAe,IAJb;AAKtBL,IAAAA,KAAK,EAAEA,KAAK,GAAGA,KAAH,GAAW,IALD;AAMtB2E,IAAAA,WANsB;AAOtB1C,IAAAA,QAPsB;AAQtBtC,IAAAA,KARsB;AAStBqF,IAAAA,KAAK,EAAEf,SATe;AAUtB7C,IAAAA,SAVsB;AAWtB6D,IAAAA,MAAM,EAAErH,UAAU,CAAC4E,OAAX,CACNxC,KAAK,GAAGiF,MAAM,CAACC,cAAV,GAA2BD,MAAM,CAACE,SADjC;AAXc,GAAxB;AAgBA,QAAMC,GAAG,GAAGxG,gBAAgB,CAACkG,eAAD,CAA5B;AAEA,QAAMO,WAAW,GAAGxG,iBAAiB,CAAC,EACpC,GAAGiG,eADiC;AAEpCM,IAAAA;AAFoC,GAAD,CAArC;AAKA,QAAME,mBAAmB,GACvB,CAAChB,eAAD,IAAoBK,WAAW,GAAGrG,wBAAlC,CADF;AAGA,QAAMiH,kBAAkB,GAAG3D,gBAAgB,GACvC9C,sBAAsB,CAACwB,WAAW,CAACkF,OAAb,EAAsB5D,gBAAtB,CADiB,GAEvCtB,WAAW,CAAC6D,WAAZ,CAAwBsB,QAAxB,GACA,CADA,GAEA,CAJJ;AAMA,QAAMC,SAAS,GACbtD,MAAM,KACLpC,KAAK,GAAIL,KAAK,GAAGnB,mBAAH,GAAyBC,gBAAlC,GAAsDuD,UADtD,CADR;AAIA,QAAM2D,UAAU,GACdjB,WAAW,IACV,CAACtC,MAAD,GAAWpC,KAAK,GAAGzB,uBAAH,GAA6BuD,iBAA7C,GAAkE,CADxD,CADb;AAIA,QAAM8D,eAAe,GAAG,CAACD,UAAU,GAAGtH,cAAd,IAAgC,CAAxD;AAEA,QAAMwH,oBAAoB,GAAG/C,UAAU,CAACV,MAAX,GACzBrD,6BAA6B,CAAC;AAC5BqD,IAAAA,MAAM,EAAEuD,UADoB;AAE5B,OAAGN,WAFyB;AAG5BS,IAAAA,WAAW,EAAEhD,UAAU,CAACV;AAHI,GAAD,CADJ,GAMzB,IANJ;AAQA,QAAM2D,qBAAqB,GAAGhD,WAAW,CAACX,MAAZ,GAC1BrD,6BAA6B,CAAC;AAC5BqD,IAAAA,MAAM,EAAEuD,UADoB;AAE5B,OAAGN,WAFyB;AAG5BS,IAAAA,WAAW,EAAE/C,WAAW,CAACX;AAHG,GAAD,CADH,GAM1B,IANJ;AAQA,QAAM4D,UAAU,GAAG;AACjBrG,IAAAA,KADiB;AAEjBiB,IAAAA,oBAFiB;AAGjB2E,IAAAA,kBAHiB;AAIjB3F,IAAAA,KAJiB;AAKjBqG,IAAAA,gBAAgB,EAAEhB,MAAM,CAACiB,WALR;AAMjBZ,IAAAA,mBANiB;AAOjBf,IAAAA,mBAPiB;AAQjB9C,IAAAA,IARiB;AASjBQ,IAAAA,QATiB;AAUjBE,IAAAA,UAViB;AAWjB6B,IAAAA,UAXiB;AAYjBmC,IAAAA,aAAa,EAAE/H,qBAZE;AAajBuG,IAAAA,WAbiB;AAcjByB,IAAAA,aAAa,EAAEhF,SAAS,GACpB;AACEwB,MAAAA,WAAW,EAAE/E,WAAW,CAAC2G,KAAZ,GAAoB3B,YAApB,GAAmCD,WADlD;AAEEC,MAAAA,YAAY,EAAEhF,WAAW,CAAC2G,KAAZ,GAAoB5B,WAApB,GAAkCC;AAFlD,KADoB,GAKpB;AAAEA,MAAAA,YAAF;AAAgBD,MAAAA;AAAhB,KAnBa;AAoBjBhB,IAAAA,gBApBiB;AAqBjB4B,IAAAA,WArBiB;AAsBjBE,IAAAA,gBAtBiB;AAuBjBC,IAAAA,UAvBiB;AAwBjBnC,IAAAA,SAxBiB;AAyBjB6E,IAAAA,qBAAqB,EAAElF,IAAI,CAACkF,qBAzBX;AA0BjBnF,IAAAA;AA1BiB,GAAnB;AA4BA,QAAMoF,gBAAgB,GAAG;AACvB,KAACjH,aAAa,CAACkH,IAAf,GAAsBV,oBADC;AAEvB,KAACxG,aAAa,CAACmH,KAAf,GAAuBT;AAFA,GAAzB;AAIA,QAAMU,aAAa,GAAG;AACpB,KAACpH,aAAa,CAACkH,IAAf,GAAsB1F,uBADF;AAEpB,KAACxB,aAAa,CAACmH,KAAf,GAAuB1F;AAFH,GAAtB;AAKA,MAAI4F,cAAuC,GAAG;AAC5CrE,IAAAA,iBAD4C;AAE5CM,IAAAA,eAF4C;AAG5ClC,IAAAA,UAH4C;AAI5CkE,IAAAA,WAAW,EAAE;AACX,OAACrF,aAAa,CAACqH,KAAf,GAAuBL,gBADZ;AAEX,OAAChH,aAAa,CAACsH,IAAf,GAAsBhB;AAFX,KAJ+B;AAQ5Ca,IAAAA,aAR4C;AAS5CI,IAAAA,kBAAkB,EAAEvG,WAAW,CAACuB,OATY;AAU5CwE,IAAAA,qBAAqB,EAAElF,IAAI,CAACkF;AAVgB,GAA9C;;AAYA,MAAI1D,eAAe,CAACmE,MAApB,EAA4B;AAC1BJ,IAAAA,cAAc,GAAG,EACf,GAAGA,cADY;AAEf3F,MAAAA,IAFe;AAGfC,MAAAA,KAHe;AAIf+F,MAAAA,SAAS,EAAE,EAAE,GAAGtF,IAAL;AAAWQ,QAAAA,QAAX;AAAqBE,QAAAA;AAArB,OAJI;AAKf6E,MAAAA,OAAO,EAAE1G,WAAW,CAACkF;AALN,KAAjB;AAOD;;AAED,sBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAAC3B,cAAD,EAAiBtB,SAAjB;AAAb,kBACE,oBAAC,SAAD;AACE,IAAA,gBAAgB,EAAEX,gBADpB;AAEE,IAAA,WAAW,EAAEtB,WAFf;AAGE,IAAA,oBAAoB,EAAEmD,oBAHxB;AAIE,IAAA,KAAK,EAAE7D,KAJT;AAKE,IAAA,MAAM,EAAE0B,MALV;AAME,IAAA,WAAW,EAAEkC;AANf,IADF,eASE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE,CACLyB,MAAM,CAACgC,cADF,EAEL;AACEvB,MAAAA;AADF,KAFK;AADT,KAQG,CAACtE,SAAD,IAAcf,SAAd,IAA2B,CAAC,CAACV,KAA7B;AAAA;AACC;AACA;AACA,sBAAC,IAAD;AACE,IAAA,MAAM,EAAC,iBADT;AAEE,IAAA,aAAa,EAAC,MAFhB;AAGE,IAAA,KAAK,EAAE,CACL/B,UAAU,CAACsJ,YADN,EAELlH,KAAK,GAAGiF,MAAM,CAACkC,mBAAV,GAAgClC,MAAM,CAACmC,cAFvC,EAGL;AACExD,MAAAA,eAAe,EACbrB,SAAS,CAACqB,eAAV,IAA6BC,cAAc,CAACD,eAFhD;AAGE7C,MAAAA,IAAI,EAAE6B,WAHR;AAIE5B,MAAAA,KAAK,EAAE6B;AAJT,KAHK;AAHT,IAXJ,eA0BE,oBAAC,UAAD;AAAY,IAAA,WAAW,EAAEvC,WAAzB;AAAsC,IAAA,UAAU,EAAE0F;AAAlD,IA1BF,EA2BG7F,MA3BH,aA2BGA,MA3BH,uBA2BGA,MAAM,CAAG;AACRe,IAAAA,MAAM,EAAG,GAAEA,MAAO,OADV;AAER,OAAGC,IAFK;AAGRkG,IAAAA,GAAG,EAAE9G,QAHG;AAIRI,IAAAA,YAJQ;AAKRuF,IAAAA,WAAW,EAAEvG,KAAK,GAAGW,WAAW,CAAC4F,WAAf,GAA6B/E,IAAI,CAAC+E,WAL5C;AAMRjF,IAAAA,oBAAoB,EAAEA,oBAAF,aAAEA,oBAAF,cAAEA,oBAAF,GAA0ByC,gBANtC;AAORhE,IAAAA,QAAQ,EAAE,CAACD,QAAD,IAAaC,QAPf;AAQRG,IAAAA,cAAc,EACZ,OAAOA,cAAP,KAA0B,WAA1B,GACI2D,WADJ,GAEI3D,cAXE;AAYRW,IAAAA,OAZQ;AAaRE,IAAAA,MAbQ;AAcR4G,IAAAA,qBAAqB,EAAE,aAdf;AAeRjH,IAAAA,SAfQ;AAgBRJ,IAAAA,KAAK,EAAE,CACLgF,MAAM,CAACsC,KADF,EAEL;AAAE3E,MAAAA,WAAF;AAAeC,MAAAA;AAAf,KAFK,EAGL,CAACxC,SAAD,IAAeA,SAAS,IAAI+B,MAA5B,GAAsC;AAAEA,MAAAA,MAAM,EAAEuD;AAAV,KAAtC,GAA+D,EAH1D,EAILN,WAJK,EAKL,EACE,GAAG5D,IADL;AAEEQ,MAAAA,QAFF;AAGEE,MAAAA,UAHF;AAIEqF,MAAAA,KAAK,EAAEjE,cAJT;AAKEkE,MAAAA,iBAAiB,EAAEpH,SAAS,GAAG,KAAH,GAAW,QALzC;AAMEiC,MAAAA,SAAS,EAAEA,SAAS,GAChBA,SADgB,GAEhBzE,WAAW,CAAC2G,KAAZ,GACA,OADA,GAEA;AAVN,KALK,EAiBL1G,QAAQ,CAACuD,EAAT,KAAgB,KAAhB,IAAyB;AAAEqG,MAAAA,OAAO,EAAE;AAAX,KAjBpB,EAkBLvE,sCAlBK;AAhBC,GAAH,CA3BT,CATF,eA0EE,oBAAC,kBAAD,EAAwBuD,cAAxB,CA1EF,CADF;AA8ED,CA3UD;;AA6UA,eAAelH,aAAf;;AAeA,MAAMmI,SAAS,GAAG,SAOI;AAAA,MAPH;AACjBrH,IAAAA,WADiB;AAEjBV,IAAAA,KAFiB;AAGjB0B,IAAAA,MAHiB;AAIjBkC,IAAAA,WAJiB;AAKjBC,IAAAA,oBALiB;AAMjB7B,IAAAA;AANiB,GAOG;AACpB,QAAM;AAAEL,IAAAA;AAAF,MAAWtD,QAAQ,EAAzB;AAEA,MAAI2F,eAAe,GAAGtD,WAAW,CAACuB,OAAZ,GAClB2B,WADkB,GAElBC,oBAFJ;AAIA,MAAI7D,KAAJ,EAAWgE,eAAe,GAAGtC,MAAH,aAAGA,MAAH,uBAAGA,MAAM,CAAE1B,KAA1B;AAEX,QAAMgI,WAAW,GAAGrG,IAAI,GAAG,CAAH,GAAO,CAA/B;AAEA,sBACE,oBAAC,QAAD,CAAU,IAAV;AACE,IAAA,KAAK,EAAE,CACL0D,MAAM,CAAC4C,SADF,EAELtG,IAAI,IAAI0D,MAAM,CAAC6C,YAFV,EAGL;AACElE,MAAAA,eADF;AAEE;AACAmE,MAAAA,SAAS,EAAE,CACT;AACEC,QAAAA,MAAM,EAAE,CAACzG,IAAI,GAAGK,gBAAH,GAAsBtB,WAAW,CAACuB,OAAvC,IACJ+F,WADI,GAEJ;AAHN,OADS;AAHb,KAHK;AADT,IADF;AAmBD,CArCD;;AAuCA,MAAM3C,MAAM,GAAGrH,UAAU,CAACqK,MAAX,CAAkB;AAC/B/B,EAAAA,WAAW,EAAE;AACXgC,IAAAA,QAAQ,EAAE,UADC;AAEXnH,IAAAA,IAAI,EAAE;AAFK,GADkB;AAK/B8G,EAAAA,SAAS,EAAE;AACTK,IAAAA,QAAQ,EAAE,UADD;AAETnH,IAAAA,IAAI,EAAE,CAFG;AAGTC,IAAAA,KAAK,EAAE,CAHE;AAITmH,IAAAA,MAAM,EAAE,CAJC;AAKT/F,IAAAA,MAAM,EAAE,CALC;AAMTgG,IAAAA,MAAM,EAAE;AANC,GALoB;AAa/BN,EAAAA,YAAY,EAAE;AACZ1F,IAAAA,MAAM,EAAE;AADI,GAbiB;AAgB/B6E,EAAAA,cAAc,EAAE;AACdoB,IAAAA,UAAU,EAAE,CADE;AAEdC,IAAAA,aAAa,EAAE;AAFD,GAhBe;AAoB/Bf,EAAAA,KAAK,EAAE;AACLgB,IAAAA,QAAQ,EAAE,CADL;AAELC,IAAAA,MAAM,EAAE;AAFH,GApBwB;AAwB/BrD,EAAAA,SAAS,EAAE;AACTkD,IAAAA,UAAU,EAAE,EADH;AAETC,IAAAA,aAAa,EAAE;AAFN,GAxBoB;AA4B/BpD,EAAAA,cAAc,EAAE;AACdmD,IAAAA,UAAU,EAAE,EADE;AAEdC,IAAAA,aAAa,EAAE;AAFD,GA5Be;AAgC/BlB,EAAAA,cAAc,EAAE;AACdhF,IAAAA,MAAM,EAAE,EADM;AAEdgG,IAAAA,MAAM,EAAE;AAFM,GAhCe;AAoC/BjB,EAAAA,mBAAmB,EAAE;AACnB/E,IAAAA,MAAM,EAAE,EADW;AAEnBgG,IAAAA,MAAM,EAAE;AAFW;AApCU,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\nimport {\n  View,\n  Animated,\n  TextInput as NativeTextInput,\n  StyleSheet,\n  I18nManager,\n  Platform,\n  TextStyle,\n} from 'react-native';\nimport InputLabel from './Label/InputLabel';\nimport TextInputAdornment, {\n  TextInputAdornmentProps,\n} from './Adornment/TextInputAdornment';\nimport type { RenderProps, ChildTextInputProps } from './types';\nimport { useTheme } from '../../core/theming';\n\nimport {\n  MAXIMIZED_LABEL_FONT_SIZE,\n  MINIMIZED_LABEL_FONT_SIZE,\n  LABEL_WIGGLE_X_OFFSET,\n  ADORNMENT_SIZE,\n  MINIMIZED_LABEL_Y_OFFSET,\n  LABEL_PADDING_TOP_DENSE,\n  MIN_DENSE_HEIGHT_WL,\n  MIN_DENSE_HEIGHT,\n} from './constants';\n\nimport {\n  calculateLabelTopPosition,\n  calculateInputHeight,\n  calculatePadding,\n  adjustPaddingFlat,\n  Padding,\n  interpolatePlaceholder,\n  calculateFlatAffixTopPosition,\n  calculateFlatInputHorizontalPadding,\n  getFlatInputColors,\n  getConstants,\n} from './helpers';\nimport {\n  getAdornmentConfig,\n  getAdornmentStyleAdjustmentForNativeInput,\n} from './Adornment/TextInputAdornment';\nimport { AdornmentSide, AdornmentType, InputMode } from './Adornment/enums';\n\nconst TextInputFlat = ({\n  disabled = false,\n  editable = true,\n  label,\n  error = false,\n  selectionColor,\n  underlineColor,\n  activeUnderlineColor,\n  dense,\n  style,\n  theme,\n  render = (props: RenderProps) => <NativeTextInput {...props} />,\n  multiline = false,\n  parentState,\n  innerRef,\n  onFocus,\n  forceFocus,\n  onBlur,\n  onChangeText,\n  onLayoutAnimatedText,\n  onLeftAffixLayoutChange,\n  onRightAffixLayoutChange,\n  left,\n  right,\n  placeholderTextColor,\n  testID = 'text-input',\n  ...rest\n}: ChildTextInputProps) => {\n  const isAndroid = Platform.OS === 'android';\n  const { colors, isV3, roundness } = theme;\n  const font = !isV3 ? theme.fonts.regular : {};\n  const hasActiveOutline = parentState.focused || error;\n\n  const { LABEL_PADDING_TOP, FLAT_INPUT_OFFSET, MIN_HEIGHT } =\n    getConstants(isV3);\n\n  const {\n    fontSize: fontSizeStyle,\n    fontWeight,\n    height,\n    paddingHorizontal,\n    textAlign,\n    ...viewStyle\n  } = (StyleSheet.flatten(style) || {}) as TextStyle;\n  const fontSize = fontSizeStyle || MAXIMIZED_LABEL_FONT_SIZE;\n\n  const isPaddingHorizontalPassed =\n    paddingHorizontal !== undefined && typeof paddingHorizontal === 'number';\n\n  const adornmentConfig = getAdornmentConfig({\n    left,\n    right,\n  });\n\n  let { paddingLeft, paddingRight } = calculateFlatInputHorizontalPadding({\n    adornmentConfig,\n    isV3,\n  });\n\n  if (isPaddingHorizontalPassed) {\n    paddingLeft = paddingHorizontal as number;\n    paddingRight = paddingHorizontal as number;\n  }\n\n  const { leftLayout, rightLayout } = parentState;\n\n  const rightAffixWidth = right\n    ? rightLayout.width || ADORNMENT_SIZE\n    : ADORNMENT_SIZE;\n\n  const leftAffixWidth = left\n    ? leftLayout.width || ADORNMENT_SIZE\n    : ADORNMENT_SIZE;\n\n  const adornmentStyleAdjustmentForNativeInput =\n    getAdornmentStyleAdjustmentForNativeInput({\n      adornmentConfig,\n      rightAffixWidth,\n      leftAffixWidth,\n      paddingHorizontal,\n      inputOffset: FLAT_INPUT_OFFSET,\n      mode: InputMode.Flat,\n      isV3,\n    });\n\n  const {\n    inputTextColor,\n    activeColor,\n    underlineColorCustom,\n    placeholderColor,\n    errorColor,\n    backgroundColor,\n  } = getFlatInputColors({\n    underlineColor,\n    activeUnderlineColor,\n    disabled,\n    error,\n    theme,\n  });\n\n  const containerStyle = {\n    backgroundColor,\n    borderTopLeftRadius: theme.roundness,\n    borderTopRightRadius: theme.roundness,\n  };\n\n  const labelScale = MINIMIZED_LABEL_FONT_SIZE / fontSize;\n  const fontScale = MAXIMIZED_LABEL_FONT_SIZE / fontSize;\n\n  const labelWidth = parentState.labelLayout.width;\n  const labelHeight = parentState.labelLayout.height;\n  const labelHalfWidth = labelWidth / 2;\n  const labelHalfHeight = labelHeight / 2;\n\n  const baseLabelTranslateX =\n    (I18nManager.isRTL ? 1 : -1) *\n      (labelHalfWidth - (labelScale * labelWidth) / 2) +\n    (1 - labelScale) * (I18nManager.isRTL ? -1 : 1) * paddingLeft;\n\n  const minInputHeight = dense\n    ? (label ? MIN_DENSE_HEIGHT_WL : MIN_DENSE_HEIGHT) - LABEL_PADDING_TOP_DENSE\n    : MIN_HEIGHT - LABEL_PADDING_TOP;\n\n  const inputHeight = calculateInputHeight(labelHeight, height, minInputHeight);\n\n  const topPosition = calculateLabelTopPosition(\n    labelHeight,\n    inputHeight,\n    multiline && height ? 0 : !height ? minInputHeight / 2 : 0\n  );\n\n  if (height && typeof height !== 'number') {\n    // eslint-disable-next-line\n    console.warn('Currently we support only numbers in height prop');\n  }\n\n  const paddingSettings = {\n    height: height ? +height : null,\n    labelHalfHeight,\n    offset: FLAT_INPUT_OFFSET,\n    multiline: multiline ? multiline : null,\n    dense: dense ? dense : null,\n    topPosition,\n    fontSize,\n    label,\n    scale: fontScale,\n    isAndroid,\n    styles: StyleSheet.flatten(\n      dense ? styles.inputFlatDense : styles.inputFlat\n    ) as Padding,\n  };\n\n  const pad = calculatePadding(paddingSettings);\n\n  const paddingFlat = adjustPaddingFlat({\n    ...paddingSettings,\n    pad,\n  });\n\n  const baseLabelTranslateY =\n    -labelHalfHeight - (topPosition + MINIMIZED_LABEL_Y_OFFSET);\n\n  const placeholderOpacity = hasActiveOutline\n    ? interpolatePlaceholder(parentState.labeled, hasActiveOutline)\n    : parentState.labelLayout.measured\n    ? 1\n    : 0;\n\n  const minHeight =\n    height ||\n    (dense ? (label ? MIN_DENSE_HEIGHT_WL : MIN_DENSE_HEIGHT) : MIN_HEIGHT);\n\n  const flatHeight =\n    inputHeight +\n    (!height ? (dense ? LABEL_PADDING_TOP_DENSE : LABEL_PADDING_TOP) : 0);\n\n  const iconTopPosition = (flatHeight - ADORNMENT_SIZE) / 2;\n\n  const leftAffixTopPosition = leftLayout.height\n    ? calculateFlatAffixTopPosition({\n        height: flatHeight,\n        ...paddingFlat,\n        affixHeight: leftLayout.height,\n      })\n    : null;\n\n  const rightAffixTopPosition = rightLayout.height\n    ? calculateFlatAffixTopPosition({\n        height: flatHeight,\n        ...paddingFlat,\n        affixHeight: rightLayout.height,\n      })\n    : null;\n\n  const labelProps = {\n    label,\n    onLayoutAnimatedText,\n    placeholderOpacity,\n    error,\n    placeholderStyle: styles.placeholder,\n    baseLabelTranslateY,\n    baseLabelTranslateX,\n    font,\n    fontSize,\n    fontWeight,\n    labelScale,\n    wiggleOffsetX: LABEL_WIGGLE_X_OFFSET,\n    topPosition,\n    paddingOffset: isAndroid\n      ? {\n          paddingLeft: I18nManager.isRTL ? paddingRight : paddingLeft,\n          paddingRight: I18nManager.isRTL ? paddingLeft : paddingRight,\n        }\n      : { paddingRight, paddingLeft },\n    hasActiveOutline,\n    activeColor,\n    placeholderColor,\n    errorColor,\n    roundness,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n    testID,\n  };\n  const affixTopPosition = {\n    [AdornmentSide.Left]: leftAffixTopPosition,\n    [AdornmentSide.Right]: rightAffixTopPosition,\n  };\n  const onAffixChange = {\n    [AdornmentSide.Left]: onLeftAffixLayoutChange,\n    [AdornmentSide.Right]: onRightAffixLayoutChange,\n  };\n\n  let adornmentProps: TextInputAdornmentProps = {\n    paddingHorizontal,\n    adornmentConfig,\n    forceFocus,\n    topPosition: {\n      [AdornmentType.Affix]: affixTopPosition,\n      [AdornmentType.Icon]: iconTopPosition,\n    },\n    onAffixChange,\n    isTextInputFocused: parentState.focused,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n  };\n  if (adornmentConfig.length) {\n    adornmentProps = {\n      ...adornmentProps,\n      left,\n      right,\n      textStyle: { ...font, fontSize, fontWeight },\n      visible: parentState.labeled,\n    };\n  }\n\n  return (\n    <View style={[containerStyle, viewStyle]}>\n      <Underline\n        hasActiveOutline={hasActiveOutline}\n        parentState={parentState}\n        underlineColorCustom={underlineColorCustom}\n        error={error}\n        colors={colors}\n        activeColor={activeColor}\n      />\n      <View\n        style={[\n          styles.labelContainer,\n          {\n            minHeight,\n          },\n        ]}\n      >\n        {!isAndroid && multiline && !!label && (\n          // Workaround for: https://github.com/callstack/react-native-paper/issues/2799\n          // Patch for a multiline TextInput with fixed height, which allow to avoid covering input label with its value.\n          <View\n            testID=\"patch-container\"\n            pointerEvents=\"none\"\n            style={[\n              StyleSheet.absoluteFill,\n              dense ? styles.densePatchContainer : styles.patchContainer,\n              {\n                backgroundColor:\n                  viewStyle.backgroundColor || containerStyle.backgroundColor,\n                left: paddingLeft,\n                right: paddingRight,\n              },\n            ]}\n          />\n        )}\n        <InputLabel parentState={parentState} labelProps={labelProps} />\n        {render?.({\n          testID: `${testID}-flat`,\n          ...rest,\n          ref: innerRef,\n          onChangeText,\n          placeholder: label ? parentState.placeholder : rest.placeholder,\n          placeholderTextColor: placeholderTextColor ?? placeholderColor,\n          editable: !disabled && editable,\n          selectionColor:\n            typeof selectionColor === 'undefined'\n              ? activeColor\n              : selectionColor,\n          onFocus,\n          onBlur,\n          underlineColorAndroid: 'transparent',\n          multiline,\n          style: [\n            styles.input,\n            { paddingLeft, paddingRight },\n            !multiline || (multiline && height) ? { height: flatHeight } : {},\n            paddingFlat,\n            {\n              ...font,\n              fontSize,\n              fontWeight,\n              color: inputTextColor,\n              textAlignVertical: multiline ? 'top' : 'center',\n              textAlign: textAlign\n                ? textAlign\n                : I18nManager.isRTL\n                ? 'right'\n                : 'left',\n            },\n            Platform.OS === 'web' && { outline: 'none' },\n            adornmentStyleAdjustmentForNativeInput,\n          ],\n        })}\n      </View>\n      <TextInputAdornment {...adornmentProps} />\n    </View>\n  );\n};\n\nexport default TextInputFlat;\n\ntype UnderlineProps = {\n  parentState: {\n    focused: boolean;\n  };\n  error?: boolean;\n  colors?: {\n    error?: string;\n  };\n  activeColor: string;\n  underlineColorCustom?: string;\n  hasActiveOutline?: boolean;\n};\n\nconst Underline = ({\n  parentState,\n  error,\n  colors,\n  activeColor,\n  underlineColorCustom,\n  hasActiveOutline,\n}: UnderlineProps) => {\n  const { isV3 } = useTheme();\n\n  let backgroundColor = parentState.focused\n    ? activeColor\n    : underlineColorCustom;\n\n  if (error) backgroundColor = colors?.error;\n\n  const activeScale = isV3 ? 2 : 1;\n\n  return (\n    <Animated.View\n      style={[\n        styles.underline,\n        isV3 && styles.md3Underline,\n        {\n          backgroundColor,\n          // Underlines is thinner when input is not focused\n          transform: [\n            {\n              scaleY: (isV3 ? hasActiveOutline : parentState.focused)\n                ? activeScale\n                : 0.5,\n            },\n          ],\n        },\n      ]}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  placeholder: {\n    position: 'absolute',\n    left: 0,\n  },\n  underline: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0,\n    height: 2,\n    zIndex: 1,\n  },\n  md3Underline: {\n    height: 1,\n  },\n  labelContainer: {\n    paddingTop: 0,\n    paddingBottom: 0,\n  },\n  input: {\n    flexGrow: 1,\n    margin: 0,\n  },\n  inputFlat: {\n    paddingTop: 24,\n    paddingBottom: 4,\n  },\n  inputFlatDense: {\n    paddingTop: 22,\n    paddingBottom: 2,\n  },\n  patchContainer: {\n    height: 24,\n    zIndex: 2,\n  },\n  densePatchContainer: {\n    height: 22,\n    zIndex: 2,\n  },\n});\n"]}
{"version":3,"sources":["helpers.tsx"],"names":["color","ADORNMENT_SIZE","MD3_LABEL_PADDING_HORIZONTAL","MD2_LABEL_PADDING_HORIZONTAL","MD3_ADORNMENT_OFFSET","MD2_ADORNMENT_OFFSET","MD3_FLAT_INPUT_OFFSET","MD2_FLAT_INPUT_OFFSET","MD3_AFFIX_OFFSET","MD2_AFFIX_OFFSET","MD3_ICON_OFFSET","MD2_ICON_OFFSET","MD3_LABEL_PADDING_TOP","MD2_LABEL_PADDING_TOP","MD3_MIN_HEIGHT","MD2_MIN_HEIGHT","MD3_INPUT_PADDING_HORIZONTAL","MD2_INPUT_PADDING_HORIZONTAL","MD3_OUTLINED_INPUT_OFFSET","MD2_OUTLINED_INPUT_OFFSET","AdornmentType","AdornmentSide","MD3LightTheme","calculateLabelTopPosition","labelHeight","height","optionalPadding","customHeight","Math","floor","calculateInputHeight","minHeight","finalHeight","calculatePadding","props","multiline","result","calculateTextAreaPadding","calculateInputPadding","max","dense","topPosition","fontSize","scale","offset","isAndroid","refFontSize","min","adjustPaddingOut","pad","label","lineHeight","fontHeight","refFontHeight","paddingTop","paddingBottom","adjustPaddingFlat","styles","topResult","bottomResult","interpolatePlaceholder","labeled","hasActiveOutline","interpolate","inputRange","outputRange","calculateFlatAffixTopPosition","affixHeight","inputHeightWithoutPadding","halfOfTheInputHeightDecreasedByAffixHeight","calculateOutlinedIconAndAffixTopPosition","labelYOffset","calculateFlatInputHorizontalPadding","adornmentConfig","isV3","LABEL_PADDING_HORIZONTAL","ADORNMENT_OFFSET","FLAT_INPUT_OFFSET","getConstants","paddingLeft","paddingRight","forEach","type","side","Icon","Left","Right","Affix","getInputTextColor","theme","disabled","mode","isFlat","colors","onSurfaceDisabled","onSurfaceVariant","onSurface","text","alpha","rgb","string","getActiveColor","error","activeUnderlineColor","activeOutlineColor","modeColor","primary","getPlaceholderColor","placeholder","getFlatBackgroundColor","onSecondaryContainer","surfaceVariant","undefined","dark","background","lighten","darken","getFlatUnderlineColor","underlineColor","getOutlinedOutlineInputColor","customOutlineColor","isTransparent","surfaceDisabled","outline","getFlatInputColors","baseFlatColorProps","inputTextColor","activeColor","underlineColorCustom","placeholderColor","errorColor","backgroundColor","getOutlinedInputColors","baseOutlinedColorProps","outlineColor","AFFIX_OFFSET","ICON_OFFSET","LABEL_PADDING_TOP","MIN_HEIGHT","INPUT_PADDING_HORIZONTAL","OUTLINED_INPUT_OFFSET"],"mappings":"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","sourcesContent":["import type { Animated } from 'react-native';\nimport color from 'color';\nimport type { AdornmentConfig } from './Adornment/types';\nimport {\n  ADORNMENT_SIZE,\n  MD3_LABEL_PADDING_HORIZONTAL,\n  MD2_LABEL_PADDING_HORIZONTAL,\n  MD3_ADORNMENT_OFFSET,\n  MD2_ADORNMENT_OFFSET,\n  MD3_FLAT_INPUT_OFFSET,\n  MD2_FLAT_INPUT_OFFSET,\n  MD3_AFFIX_OFFSET,\n  MD2_AFFIX_OFFSET,\n  MD3_ICON_OFFSET,\n  MD2_ICON_OFFSET,\n  MD3_LABEL_PADDING_TOP,\n  MD2_LABEL_PADDING_TOP,\n  MD3_MIN_HEIGHT,\n  MD2_MIN_HEIGHT,\n  MD3_INPUT_PADDING_HORIZONTAL,\n  MD2_INPUT_PADDING_HORIZONTAL,\n  MD3_OUTLINED_INPUT_OFFSET,\n  MD2_OUTLINED_INPUT_OFFSET,\n} from './constants';\nimport { AdornmentType, AdornmentSide } from './Adornment/enums';\nimport type { TextInputLabelProp } from './types';\nimport { MD3LightTheme } from '../../styles/themes';\nimport type { Theme } from '../../types';\n\ntype PaddingProps = {\n  height: number | null;\n  labelHalfHeight: number;\n  multiline: boolean | null;\n  dense: boolean | null;\n  topPosition: number;\n  fontSize: number;\n  lineHeight?: number;\n  label?: TextInputLabelProp | null;\n  scale: number;\n  offset: number;\n  isAndroid: boolean;\n  styles: { paddingTop: number; paddingBottom: number };\n};\n\ntype AdjProps = PaddingProps & {\n  pad: number;\n};\n\nexport type Padding = { paddingTop: number; paddingBottom: number };\n\nexport const calculateLabelTopPosition = (\n  labelHeight: number,\n  height: number = 0,\n  optionalPadding: number = 0\n): number => {\n  const customHeight = height > 0 ? height : 0;\n\n  return Math.floor((customHeight - labelHeight) / 2 + optionalPadding);\n};\n\nexport const calculateInputHeight = (\n  labelHeight: number,\n  height: any = 0,\n  minHeight: number\n): number => {\n  const finalHeight = height > 0 ? height : labelHeight;\n\n  if (height > 0) return height;\n  return finalHeight < minHeight ? minHeight : finalHeight;\n};\n\nexport const calculatePadding = (props: PaddingProps): number => {\n  const { height, multiline = false } = props;\n\n  let result = 0;\n\n  if (multiline) {\n    if (height && multiline) {\n      result = calculateTextAreaPadding(props);\n    } else {\n      result = calculateInputPadding(props);\n    }\n  }\n\n  return Math.max(0, result);\n};\n\nconst calculateTextAreaPadding = (props: PaddingProps) => {\n  const { dense } = props;\n\n  return dense ? 10 : 20;\n};\n\nconst calculateInputPadding = ({\n  topPosition,\n  fontSize,\n  multiline,\n  scale,\n  dense,\n  offset,\n  isAndroid,\n}: PaddingProps): number => {\n  const refFontSize = scale * fontSize;\n  let result = Math.floor(topPosition / 2);\n\n  result =\n    result +\n    Math.floor((refFontSize - fontSize) / 2) -\n    (scale < 1 ? offset / 2 : 0);\n\n  if (multiline && isAndroid)\n    result = Math.min(dense ? offset / 2 : offset, result);\n\n  return result;\n};\n\nexport const adjustPaddingOut = ({\n  pad,\n  multiline,\n  label,\n  scale,\n  height,\n  fontSize,\n  lineHeight,\n  dense,\n  offset,\n  isAndroid,\n}: AdjProps): Padding => {\n  const fontHeight = lineHeight ?? fontSize;\n  const refFontHeight = scale * fontSize;\n  let result = pad;\n\n  if (height && !multiline) {\n    return {\n      paddingTop: Math.max(0, (height - fontHeight) / 2),\n      paddingBottom: Math.max(0, (height - fontHeight) / 2),\n    };\n  }\n  if (!isAndroid && multiline) {\n    if (dense) {\n      if (label) {\n        result += scale < 1 ? Math.min(offset, (refFontHeight / 2) * scale) : 0;\n      } else {\n        result += 0;\n      }\n    }\n    if (!dense) {\n      if (label) {\n        result +=\n          scale < 1\n            ? Math.min(offset, refFontHeight * scale)\n            : Math.min(offset / 2, refFontHeight * scale);\n      } else {\n        result += scale < 1 ? Math.min(offset / 2, refFontHeight * scale) : 0;\n      }\n    }\n    result = Math.floor(result);\n  }\n  return { paddingTop: result, paddingBottom: result };\n};\n\nexport const adjustPaddingFlat = ({\n  pad,\n  scale,\n  multiline,\n  label,\n  height,\n  offset,\n  dense,\n  fontSize,\n  isAndroid,\n  styles,\n}: AdjProps): Padding => {\n  let result = pad;\n  let topResult = result;\n  let bottomResult = result;\n  const { paddingTop, paddingBottom } = styles;\n  const refFontSize = scale * fontSize;\n\n  if (!multiline) {\n    // do not modify padding if input is not multiline\n    if (label) {\n      // return const style for flat input with label\n      return { paddingTop, paddingBottom };\n    }\n    // return pad for flat input without label\n    return { paddingTop: result, paddingBottom: result };\n  }\n\n  if (label) {\n    // add paddings passed from styles\n    topResult = paddingTop;\n    bottomResult = paddingBottom;\n\n    // adjust top padding for iOS\n    if (!isAndroid) {\n      if (dense) {\n        topResult +=\n          scale < 1\n            ? Math.min(result, refFontSize * scale) - result / 2\n            : Math.min(result, refFontSize * scale) - result / 2;\n      }\n      if (!dense) {\n        topResult +=\n          scale < 1\n            ? Math.min(offset / 2, refFontSize * scale)\n            : Math.min(result, refFontSize * scale) - offset / 2;\n      }\n    }\n    topResult = Math.floor(topResult);\n  } else {\n    if (height) {\n      // center text when height is passed\n      return {\n        paddingTop: Math.max(0, (height - fontSize) / 2),\n        paddingBottom: Math.max(0, (height - fontSize) / 2),\n      };\n    }\n    // adjust paddings for iOS if no label\n    if (!isAndroid) {\n      if (dense) {\n        result +=\n          scale < 1\n            ? Math.min(offset / 2, (fontSize / 2) * scale)\n            : Math.min(offset / 2, scale);\n      }\n      if (!dense) {\n        result +=\n          scale < 1\n            ? Math.min(offset, fontSize * scale)\n            : Math.min(fontSize, (offset / 2) * scale);\n      }\n\n      result = Math.floor(result);\n      topResult = result;\n      bottomResult = result;\n    }\n  }\n\n  return {\n    paddingTop: Math.max(0, topResult),\n    paddingBottom: Math.max(0, bottomResult),\n  };\n};\n\nexport const interpolatePlaceholder = (\n  labeled: Animated.Value,\n  hasActiveOutline: boolean | undefined\n) =>\n  labeled.interpolate({\n    inputRange: [0, 1],\n    outputRange: [hasActiveOutline ? 0 : 1, 1],\n  });\n\nexport function calculateFlatAffixTopPosition({\n  height,\n  paddingTop,\n  paddingBottom,\n  affixHeight,\n}: {\n  height: number;\n  paddingTop: number;\n  paddingBottom: number;\n  affixHeight: number;\n}): number {\n  const inputHeightWithoutPadding = height - paddingTop - paddingBottom;\n\n  const halfOfTheInputHeightDecreasedByAffixHeight =\n    (inputHeightWithoutPadding - affixHeight) / 2;\n\n  return paddingTop + halfOfTheInputHeightDecreasedByAffixHeight;\n}\n\nexport function calculateOutlinedIconAndAffixTopPosition({\n  height,\n  affixHeight,\n  labelYOffset,\n}: {\n  height: number;\n  affixHeight: number;\n  labelYOffset: number;\n}): number {\n  return (height - affixHeight + labelYOffset) / 2;\n}\n\nexport const calculateFlatInputHorizontalPadding = ({\n  adornmentConfig,\n  isV3,\n}: {\n  adornmentConfig: AdornmentConfig[];\n  isV3?: boolean;\n}) => {\n  const { LABEL_PADDING_HORIZONTAL, ADORNMENT_OFFSET, FLAT_INPUT_OFFSET } =\n    getConstants(isV3);\n\n  let paddingLeft = LABEL_PADDING_HORIZONTAL;\n  let paddingRight = LABEL_PADDING_HORIZONTAL;\n\n  adornmentConfig.forEach(({ type, side }) => {\n    if (type === AdornmentType.Icon && side === AdornmentSide.Left) {\n      paddingLeft = ADORNMENT_SIZE + ADORNMENT_OFFSET + FLAT_INPUT_OFFSET;\n    } else if (side === AdornmentSide.Right) {\n      if (type === AdornmentType.Affix) {\n        paddingRight = ADORNMENT_SIZE + ADORNMENT_OFFSET + FLAT_INPUT_OFFSET;\n      } else if (type === AdornmentType.Icon) {\n        paddingRight = ADORNMENT_SIZE + ADORNMENT_OFFSET + FLAT_INPUT_OFFSET;\n      }\n    }\n  });\n\n  return { paddingLeft, paddingRight };\n};\n\ntype BaseProps = {\n  theme: Theme;\n  disabled?: boolean;\n};\n\ntype Mode = 'flat' | 'outlined';\n\nconst getInputTextColor = ({\n  theme,\n  disabled,\n  mode,\n}: BaseProps & { mode: Mode }) => {\n  const isFlat = mode === 'flat';\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.onSurfaceDisabled;\n    }\n\n    if (isFlat) {\n      return theme.colors.onSurfaceVariant;\n    }\n\n    return theme.colors.onSurface;\n  }\n\n  if (disabled) {\n    return color(theme.colors.text).alpha(0.54).rgb().string();\n  }\n\n  return theme.colors.text;\n};\n\nconst getActiveColor = ({\n  theme,\n  disabled,\n  error,\n  activeUnderlineColor,\n  activeOutlineColor,\n  mode,\n}: BaseProps & {\n  error?: boolean;\n  activeUnderlineColor?: string;\n  activeOutlineColor?: string;\n  mode?: Mode;\n}) => {\n  const isFlat = mode === 'flat';\n  const modeColor = isFlat ? activeUnderlineColor : activeOutlineColor;\n\n  if (error) {\n    return theme.colors.error;\n  }\n\n  if (modeColor) {\n    return modeColor;\n  }\n\n  if (disabled) {\n    if (theme.isV3) {\n      return theme.colors.onSurfaceDisabled;\n    }\n\n    return color(theme.colors.text).alpha(0.54).rgb().string();\n  }\n\n  return theme.colors.primary;\n};\n\nconst getPlaceholderColor = ({ theme, disabled }: BaseProps) => {\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.onSurfaceDisabled;\n    }\n\n    return theme.colors.onSurfaceVariant;\n  }\n\n  if (disabled) {\n    return theme.colors.disabled;\n  }\n\n  return theme.colors.placeholder;\n};\n\nconst getFlatBackgroundColor = ({ theme, disabled }: BaseProps) => {\n  if (theme.isV3) {\n    if (disabled) {\n      // @ts-ignore According to Figma for both themes the base color for disabled in `onSecondaryContainer`\n      return color(MD3LightTheme.colors.onSecondaryContainer)\n        .alpha(0.08)\n        .rgb()\n        .string();\n    } else {\n      return theme.colors.surfaceVariant;\n    }\n  }\n\n  if (disabled) {\n    return undefined;\n  }\n\n  return theme.dark\n    ? color(theme.colors?.background).lighten(0.24).rgb().string()\n    : color(theme.colors?.background).darken(0.06).rgb().string();\n};\n\nconst getFlatUnderlineColor = ({\n  theme,\n  disabled,\n  underlineColor,\n}: BaseProps & { underlineColor?: string }) => {\n  if (!disabled && underlineColor) {\n    return underlineColor;\n  }\n\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.onSurfaceDisabled;\n    }\n\n    return theme.colors.onSurface;\n  }\n\n  if (disabled) {\n    return 'transparent';\n  }\n\n  return theme.colors.disabled;\n};\n\nconst getOutlinedOutlineInputColor = ({\n  theme,\n  disabled,\n  customOutlineColor,\n}: BaseProps & { customOutlineColor?: string }) => {\n  const isTransparent = color(customOutlineColor).alpha() === 0;\n\n  if (!disabled && customOutlineColor) {\n    return customOutlineColor;\n  }\n\n  if (theme.isV3) {\n    if (disabled) {\n      if (theme.dark) {\n        return 'transparent';\n      }\n      return theme.colors.surfaceDisabled;\n    }\n\n    return theme.colors.outline;\n  }\n\n  if (disabled) {\n    if (isTransparent) {\n      return customOutlineColor;\n    }\n    return theme.colors.disabled;\n  }\n  return theme.colors.placeholder;\n};\n\nexport const getFlatInputColors = ({\n  underlineColor,\n  activeUnderlineColor,\n  disabled,\n  error,\n  theme,\n}: {\n  underlineColor?: string;\n  activeUnderlineColor?: string;\n  disabled?: boolean;\n  error?: boolean;\n  theme: Theme;\n}) => {\n  const baseFlatColorProps = { theme, disabled };\n  return {\n    inputTextColor: getInputTextColor({ ...baseFlatColorProps, mode: 'flat' }),\n    activeColor: getActiveColor({\n      ...baseFlatColorProps,\n      error,\n      activeUnderlineColor,\n      mode: 'flat',\n    }),\n    underlineColorCustom: getFlatUnderlineColor({\n      ...baseFlatColorProps,\n      underlineColor,\n    }),\n    placeholderColor: getPlaceholderColor(baseFlatColorProps),\n    errorColor: theme.colors.error,\n    backgroundColor: getFlatBackgroundColor(baseFlatColorProps),\n  };\n};\n\nexport const getOutlinedInputColors = ({\n  activeOutlineColor,\n  customOutlineColor,\n  disabled,\n  error,\n  theme,\n}: {\n  activeOutlineColor?: string;\n  customOutlineColor?: string;\n  disabled?: boolean;\n  error?: boolean;\n  theme: Theme;\n}) => {\n  const baseOutlinedColorProps = { theme, disabled };\n\n  return {\n    inputTextColor: getInputTextColor({\n      ...baseOutlinedColorProps,\n      mode: 'outlined',\n    }),\n    activeColor: getActiveColor({\n      ...baseOutlinedColorProps,\n      error,\n      activeOutlineColor,\n      mode: 'outlined',\n    }),\n    outlineColor: getOutlinedOutlineInputColor({\n      ...baseOutlinedColorProps,\n      customOutlineColor,\n    }),\n    placeholderColor: getPlaceholderColor(baseOutlinedColorProps),\n    errorColor: theme.colors.error,\n  };\n};\n\nexport const getConstants = (isV3?: boolean) => {\n  // Text input affix\n  let AFFIX_OFFSET;\n  // Text input icon\n  let ICON_OFFSET;\n  //Text input flat\n  let LABEL_PADDING_TOP;\n  let LABEL_PADDING_HORIZONTAL;\n  let FLAT_INPUT_OFFSET;\n  let MIN_HEIGHT;\n  // Text input outlined;\n  let INPUT_PADDING_HORIZONTAL;\n  let ADORNMENT_OFFSET;\n  let OUTLINED_INPUT_OFFSET;\n\n  if (isV3) {\n    AFFIX_OFFSET = MD3_AFFIX_OFFSET;\n    ICON_OFFSET = MD3_ICON_OFFSET;\n    LABEL_PADDING_TOP = MD3_LABEL_PADDING_TOP;\n    LABEL_PADDING_HORIZONTAL = MD3_LABEL_PADDING_HORIZONTAL;\n    FLAT_INPUT_OFFSET = MD3_FLAT_INPUT_OFFSET;\n    MIN_HEIGHT = MD3_MIN_HEIGHT;\n    INPUT_PADDING_HORIZONTAL = MD3_INPUT_PADDING_HORIZONTAL;\n    ADORNMENT_OFFSET = MD3_ADORNMENT_OFFSET;\n    OUTLINED_INPUT_OFFSET = MD3_OUTLINED_INPUT_OFFSET;\n  } else {\n    AFFIX_OFFSET = MD2_AFFIX_OFFSET;\n    ICON_OFFSET = MD2_ICON_OFFSET;\n    LABEL_PADDING_TOP = MD2_LABEL_PADDING_TOP;\n    LABEL_PADDING_HORIZONTAL = MD2_LABEL_PADDING_HORIZONTAL;\n    FLAT_INPUT_OFFSET = MD2_FLAT_INPUT_OFFSET;\n    MIN_HEIGHT = MD2_MIN_HEIGHT;\n    INPUT_PADDING_HORIZONTAL = MD2_INPUT_PADDING_HORIZONTAL;\n    ADORNMENT_OFFSET = MD2_ADORNMENT_OFFSET;\n    OUTLINED_INPUT_OFFSET = MD2_OUTLINED_INPUT_OFFSET;\n  }\n\n  return {\n    AFFIX_OFFSET,\n    ICON_OFFSET,\n    LABEL_PADDING_TOP,\n    LABEL_PADDING_HORIZONTAL,\n    FLAT_INPUT_OFFSET,\n    MIN_HEIGHT,\n    INPUT_PADDING_HORIZONTAL,\n    ADORNMENT_OFFSET,\n    OUTLINED_INPUT_OFFSET,\n  };\n};\n"]}
{"version":3,"sources":["utils.ts"],"names":["color","getUnderlayColor","theme","calculatedRippleColor","underlayColor","isV3","rgb","string","fade","getRippleColor","rippleColor","colors","onSurface","alpha","dark","text","getTouchableRippleColors","calculatedUnderlayColor"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,gBAAgB,GAAG,QAQnB;AAAA,MARoB;AACxBC,IAAAA,KADwB;AAExBC,IAAAA,qBAFwB;AAGxBC,IAAAA;AAHwB,GAQpB;;AACJ,MAAIA,aAAa,IAAI,IAArB,EAA2B;AACzB,WAAOA,aAAP;AACD;;AAED,MAAIF,KAAK,CAACG,IAAV,EAAgB;AACd,WAAOL,KAAK,CAACG,qBAAD,CAAL,CAA6BG,GAA7B,GAAmCC,MAAnC,EAAP;AACD;;AAED,SAAOP,KAAK,CAACG,qBAAD,CAAL,CAA6BK,IAA7B,CAAkC,GAAlC,EAAuCF,GAAvC,GAA6CC,MAA7C,EAAP;AACD,CAlBD;;AAoBA,MAAME,cAAc,GAAG,SAMjB;AAAA,MANkB;AACtBP,IAAAA,KADsB;AAEtBQ,IAAAA;AAFsB,GAMlB;;AACJ,MAAIA,WAAJ,EAAiB;AACf,WAAOA,WAAP;AACD;;AAED,MAAIR,KAAK,CAACG,IAAV,EAAgB;AACd,WAAOL,KAAK,CAACE,KAAK,CAACS,MAAN,CAAaC,SAAd,CAAL,CAA8BC,KAA9B,CAAoC,IAApC,EAA0CP,GAA1C,GAAgDC,MAAhD,EAAP;AACD;;AAED,MAAIL,KAAK,CAACY,IAAV,EAAgB;AACd,WAAOd,KAAK,CAACE,KAAK,CAACS,MAAN,CAAaI,IAAd,CAAL,CAAyBF,KAAzB,CAA+B,IAA/B,EAAqCP,GAArC,GAA2CC,MAA3C,EAAP;AACD;;AACD,SAAOP,KAAK,CAACE,KAAK,CAACS,MAAN,CAAaI,IAAd,CAAL,CAAyBF,KAAzB,CAA+B,GAA/B,EAAoCP,GAApC,GAA0CC,MAA1C,EAAP;AACD,CAnBD;;AAqBA,OAAO,MAAMS,wBAAwB,GAAG,SAQlC;AAAA,MARmC;AACvCd,IAAAA,KADuC;AAEvCQ,IAAAA,WAFuC;AAGvCN,IAAAA;AAHuC,GAQnC;AACJ,QAAMD,qBAAqB,GAAGM,cAAc,CAAC;AAAEP,IAAAA,KAAF;AAASQ,IAAAA;AAAT,GAAD,CAA5C;AACA,SAAO;AACLP,IAAAA,qBADK;AAELc,IAAAA,uBAAuB,EAAEhB,gBAAgB,CAAC;AACxCC,MAAAA,KADwC;AAExCC,MAAAA,qBAFwC;AAGxCC,MAAAA;AAHwC,KAAD;AAFpC,GAAP;AAQD,CAlBM","sourcesContent":["import color from 'color';\nimport type { Theme } from '../../types';\n\nconst getUnderlayColor = ({\n  theme,\n  calculatedRippleColor,\n  underlayColor,\n}: {\n  theme: Theme;\n  calculatedRippleColor: string;\n  underlayColor?: string;\n}) => {\n  if (underlayColor != null) {\n    return underlayColor;\n  }\n\n  if (theme.isV3) {\n    return color(calculatedRippleColor).rgb().string();\n  }\n\n  return color(calculatedRippleColor).fade(0.5).rgb().string();\n};\n\nconst getRippleColor = ({\n  theme,\n  rippleColor,\n}: {\n  theme: Theme;\n  rippleColor?: string;\n}) => {\n  if (rippleColor) {\n    return rippleColor;\n  }\n\n  if (theme.isV3) {\n    return color(theme.colors.onSurface).alpha(0.12).rgb().string();\n  }\n\n  if (theme.dark) {\n    return color(theme.colors.text).alpha(0.32).rgb().string();\n  }\n  return color(theme.colors.text).alpha(0.2).rgb().string();\n};\n\nexport const getTouchableRippleColors = ({\n  theme,\n  rippleColor,\n  underlayColor,\n}: {\n  theme: Theme;\n  rippleColor?: string;\n  underlayColor?: string;\n}) => {\n  const calculatedRippleColor = getRippleColor({ theme, rippleColor });\n  return {\n    calculatedRippleColor,\n    calculatedUnderlayColor: getUnderlayColor({\n      theme,\n      calculatedRippleColor,\n      underlayColor,\n    }),\n  };\n};\n"]}
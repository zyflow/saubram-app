{"version":3,"sources":["Provider.tsx"],"names":["React","AccessibilityInfo","Appearance","defaultThemesByVersion","ThemeProvider","Provider","SettingsProvider","MaterialCommunityIcon","PortalHost","addEventListener","props","isOnlyVersionInTheme","theme","Object","keys","length","version","colorSchemeName","getColorScheme","reduceMotionEnabled","setReduceMotionEnabled","useState","colorScheme","setColorScheme","handleAppearanceChange","preferences","useEffect","subscription","remove","appearanceSubscription","addChangeListener","removeChangeListener","getTheme","themeVersion","scheme","defaultThemeBase","extendedThemeBase","animation","scale","isV3","children","settings","icon"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  AccessibilityInfo,\n  Appearance,\n  ColorSchemeName,\n  NativeEventSubscription,\n} from 'react-native';\nimport { defaultThemesByVersion, ThemeProvider } from './theming';\nimport { Provider as SettingsProvider, Settings } from './settings';\nimport MaterialCommunityIcon from '../components/MaterialCommunityIcon';\nimport PortalHost from '../components/Portal/PortalHost';\nimport { addEventListener } from '../utils/addEventListener';\nimport type { ThemeProp } from '../types';\n\nexport type Props = {\n  children: React.ReactNode;\n  theme?: ThemeProp;\n  settings?: Settings;\n};\n\nconst Provider = (props: Props) => {\n  const isOnlyVersionInTheme =\n    props.theme && Object.keys(props.theme).length === 1 && props.theme.version;\n\n  const colorSchemeName =\n    ((!props.theme || isOnlyVersionInTheme) && Appearance?.getColorScheme()) ||\n    'light';\n\n  const [reduceMotionEnabled, setReduceMotionEnabled] =\n    React.useState<boolean>(false);\n  const [colorScheme, setColorScheme] =\n    React.useState<ColorSchemeName>(colorSchemeName);\n\n  const handleAppearanceChange = (\n    preferences: Appearance.AppearancePreferences\n  ) => {\n    const { colorScheme } = preferences;\n    setColorScheme(colorScheme);\n  };\n\n  React.useEffect(() => {\n    let subscription: NativeEventSubscription | undefined;\n\n    if (!props.theme) {\n      subscription = addEventListener(\n        AccessibilityInfo,\n        'reduceMotionChanged',\n        setReduceMotionEnabled\n      );\n    }\n    return () => {\n      if (!props.theme) {\n        subscription?.remove();\n      }\n    };\n  }, [props.theme]);\n\n  React.useEffect(() => {\n    let appearanceSubscription: NativeEventSubscription | undefined;\n    if (!props.theme || isOnlyVersionInTheme) {\n      appearanceSubscription = Appearance?.addChangeListener(\n        handleAppearanceChange\n      ) as NativeEventSubscription | undefined;\n    }\n    return () => {\n      if (!props.theme || isOnlyVersionInTheme) {\n        if (appearanceSubscription) {\n          appearanceSubscription.remove();\n        } else {\n          Appearance?.removeChangeListener(handleAppearanceChange);\n        }\n      }\n    };\n  }, [props.theme, isOnlyVersionInTheme]);\n\n  const getTheme = () => {\n    const themeVersion = props.theme?.version || 3;\n    const scheme = colorScheme || 'light';\n    const defaultThemeBase = defaultThemesByVersion[themeVersion][scheme];\n\n    const extendedThemeBase = {\n      ...defaultThemeBase,\n      ...props.theme,\n      version: themeVersion,\n      animation: {\n        scale: reduceMotionEnabled ? 0 : 1,\n      },\n    };\n\n    return {\n      ...extendedThemeBase,\n      isV3: extendedThemeBase.version === 3,\n    } as ReactNativePaper.Theme;\n  };\n\n  const { children, settings } = props;\n\n  return (\n    <PortalHost>\n      <SettingsProvider value={settings || { icon: MaterialCommunityIcon }}>\n        <ThemeProvider theme={getTheme()}>{children}</ThemeProvider>\n      </SettingsProvider>\n    </PortalHost>\n  );\n};\n\nexport default Provider;\n"]}
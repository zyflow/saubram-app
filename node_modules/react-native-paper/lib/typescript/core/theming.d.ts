/// <reference types="react" />
import type { Theme } from 'src/types';
export declare const DefaultTheme: import("src/types").MD3Theme;
export declare const ThemeProvider: import("react").ComponentType<{
    theme?: Theme | undefined;
}>, withTheme: <Props extends {
    theme: Theme;
}, C>(WrappedComponent: import("react").ComponentType<Props> & C) => import("react").ComponentType<import("@callstack/react-theme-provider").$Without<Props, "theme"> & {
    theme?: import("@callstack/react-theme-provider").$DeepPartial<Theme> | undefined;
}> & import("@callstack/react-theme-provider/typings/hoist-non-react-statics").NonReactStatics<import("react").ComponentType<Props> & C, {}>, useTheme: (overrides?: import("@callstack/react-theme-provider").$DeepPartial<Theme> | undefined) => Theme;
export declare const defaultThemesByVersion: {
    2: {
        light: import("src/types").MD2Theme;
        dark: import("src/types").MD2Theme;
    };
    3: {
        light: import("src/types").MD3Theme;
        dark: import("src/types").MD3Theme;
    };
};
export declare const getTheme: (isDark?: boolean, isV3?: boolean) => import("src/types").MD3Theme | import("src/types").MD2Theme;
